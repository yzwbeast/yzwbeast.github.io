[{"content":"1. 学习一门编程语言 选择哪种语言并不重要，但至少学习一门编程语言是至关重要的。你可以使用该语言编写自动化脚本。\n文章 选择 DevOps 编程语言的指南 该指南推荐 Python 或 Go 作为编程语言，Bash 或 PowerShell Core 作为 DevOps 中的 Shell 脚本语言。Python 功能多样，广泛用于自动化和工具开发，而 Go 对于 Kubernetes 和 Docker 等容器技术至关重要。Bash 是 Linux 环境的理想选择，而 PowerShell Core 是跨平台的，适用于 Windows 和 Linux。更多详细信息，请查看完整指南 这里。\n◇Python Python 是一种高级解释型编程语言，以其简洁性、可读性和多功能性而闻名。它支持多种编程范式，包括过程式、面向对象和函数式编程。Python 拥有广泛的标准库和丰富的第三方包生态系统，适用于从 Web 开发、数据分析到人工智能和科学计算的多种应用场景。其简洁的语法和动态类型使得快速开发和原型设计成为可能。Python 的“内置电池”哲学提供了丰富的内置功能，而其跨平台兼容性确保了代码的可移植性。凭借强大的社区支持和持续发展，Python 已成为最受欢迎的编程语言之一，广泛应用于学术界、工业界和开源项目中，从简单的脚本编写到复杂的软件开发。\n路线图 访问 Python 专属路线图 官方 Python 官网 文章 自动化无聊的工作 文章 Python 速成课程 视频 Python 免费完整课程 动态 探索关于 Python 的热门帖子 ◇Go Go，也称为 Golang，是由 Google 开发的一种静态类型、编译型编程语言。它强调简洁性、效率和内置的并发支持。Go 具有快速编译、垃圾回收和强大的标准库。其语法简洁明了，易于阅读和维护。Go 的 goroutine 和 channel 为并发编程提供了强大的工具。该语言特别适合系统编程、网络服务和云原生应用。Go 的高效内存使用和快速执行使其在构建可扩展的服务器端应用和微服务方面广受欢迎。凭借其简洁性和性能，Go 在 DevOps 工具、容器技术和云基础设施项目中得到了广泛采用。\n路线图 访问 Go 专属路线图 官方 Go 基础教程 官方 Go 参考文档 文章 Go 示例 - 带注释的示例程序 文章 用 Go 构建 RESTful JSON API 视频 100 秒了解 Go 动态 探索关于 Golang 的热门帖子 2. 操作系统 ◇Ubuntu/Debian(Linux) Ubuntu 和 Debian 都是流行的 Linux 发行版，其中 Debian 是 Ubuntu 的上游基础。Debian 以其稳定性、广泛的软件包库和严格的测试流程而闻名，是服务器和需要长期支持的系统的首选。Ubuntu 源自 Debian，旨在提供更友好的用户体验，具有定期发布、易用性和商业支持选项。它具有更简化的安装过程、广泛的文档和活跃的社区。两个发行版都使用 Debian 的包管理系统（APT），并共享许多底层技术，但 Ubuntu 强调更精致的桌面体验和快速的发布周期。\n课程 通过实践实验室练习 Linux 命令 官方 Debian 官网 官方 Ubuntu 官网 视频 如何使用 Ubuntu 视频 Debian 12 初学者教程 动态 探索关于 Ubuntu 的热门帖子 ◇RHEL/衍生版(Linux) Red Hat Enterprise Linux (RHEL) 是一种流行的 Linux 操作系统发行版，专为企业级使用设计。它由 Red Hat, Inc. 开发和维护，采用基于订阅的模式提供。有几个基于 RHEL 或从 RHEL 衍生的 Linux 发行版，这些发行版被称为 RHEL 衍生版。一些 RHEL 衍生版的例子包括：AlmaLinux、CentOS、CloudLinux、Oracle Linux 和 Scientific Linux。RHEL 衍生版通常在企业环境中使用，因为它们提供了 RHEL 的稳定性和可靠性，同时具有免费或低成本的额外优势。\n官方 Red Hat Enterprise Linux 官网 官方 RHEL 文档 文章 学习 Linux 101 视频 什么是 Red Hat Enterprise Linux？ ◇FreeBSD(Unix) FreeBSD 是一种免费、开源的类 Unix 操作系统，源自 Berkeley 软件发行版 (BSD)。FreeBSD 以其稳定性、性能和先进的网络功能而闻名，广泛用于服务器环境、嵌入式系统以及作为网络设备的基础。它具有单体内核、全面的用户态工具集和用于轻松安装软件的 ports 集合。FreeBSD 支持多种架构，并包含高级功能，如 ZFS 文件系统、用于容器化的 jail 和 pf 包过滤器。虽然 FreeBSD 在桌面环境中不太常见，但它广泛应用于互联网基础设施、存储系统以及需要强大、可定制操作系统和宽松许可证的公司中。\n官方 FreeBSD 官方 FreeBSD 新手资源 官方 FreeBSD 文档 官方 FreeBSD 手册 视频 100 秒了解 FreeBSD 3. 终端知识 ◇脚本编写: Bash Bash（Bourne Again Shell）是一种强大的 Unix shell 和命令语言解释器，是大多数 Linux 发行版和 macOS 的默认 shell。它提供了与操作系统交互的命令行界面，执行命令并通过 shell 脚本自动化任务。Bash 支持变量、控制结构、函数和命令替换，使其在系统管理、DevOps 任务和通用脚本编写中非常灵活。它能够管道命令、重定向输入/输出，并利用大量内置命令和实用程序，使其成为开发人员和系统管理员在 Unix 类环境中管理和自动化工作流程的必备工具。\n课程 Bash 脚本编写初学者教程 文章 交互式 Shell 脚本教程 文章 Bash 脚本编写教程 视频 100 秒了解 Bash 动态 探索关于 Bash 的热门帖子 ◇编辑器: Vim, Nano, Emacs 文本编辑器是用于创建、编辑和管理文本文件的软件工具。它们从具有基本功能的简单编辑器到复杂的集成开发环境（IDE）不等。流行的文本编辑器包括：\nNotepad：Windows 的基本编辑器，适用于简单的文本文件。\nVim：一种高度可配置且功能强大的编辑器，以其效率和模态界面而闻名。\nEmacs：一种多功能编辑器，具有广泛的定制选项和丰富的插件。\nSublime Text：一种功能丰富的编辑器，注重速度和用户友好的界面。\nVisual Studio Code：一种现代的开源编辑器，内置调试支持、扩展和与各种开发工具的集成。\n官方 Vim\n官方 GNU Nano\n官方 GNU Emacs\n文章 Vim 冒险\n视频 Vim 初学者教程\n视频 Linux 速成课程 - nano\n视频 Emacs 绝对初学者指南\n◇进程监控 进程监控是对 IT 系统或组织内进程的持续观察和分析，以确保最佳性能、效率和合规性。它涉及跟踪关键指标、资源利用率和系统上运行的各个进程或应用程序的行为。这种做法有助于在问题影响整体系统性能或用户体验之前识别异常、瓶颈或潜在问题。进程监控工具通常提供有关 CPU 使用率、内存消耗、I/O 操作和线程活动的实时数据。它们通常包括警报、日志记录和进程数据可视化功能。在现代 IT 环境中，进程监控对于维护系统稳定性、优化资源分配、排查性能问题以及支持复杂分布式系统中的容量规划至关重要。\nLsof 在其标准输出中列出有关进程打开的文件信息。\n文章 lsof 速查表 文章 lsof 文档 视频 Linux 速成课程 - lsof 命令 动态 探索关于监控的热门帖子 ◇性能监控 性能监控是对 IT 系统运行效率和有效性的系统观察和测量。它涉及收集、分析和报告各种组件（包括应用程序、网络、服务器和数据库）的关键性能指标（KPI）。此过程使用专门的工具来跟踪响应时间、吞吐量、资源利用率和错误率等指标。性能监控有助于识别瓶颈、预测潜在问题并优化系统资源。它对于维护服务级别协议（SLA）、确保用户满意度和支持容量规划至关重要。在现代 IT 环境中，性能监控通常结合实时分析、AI 驱动的洞察和自动警报系统，从而实现对复杂分布式系统的主动管理，并支持 IT 运营和服务交付的持续改进。\n文章 Linux 命令：使用 vmstat 探索虚拟内存 文章 VMstat 手册页 文章 vmstat 教程 动态 探索关于监控的热门帖子 ◇网络工具 网络工具是用于监控、分析、故障排除和管理计算机网络的重要软件实用程序。它们包括广泛的应用程序，如用于深度数据包分析的 Wireshark、用于网络扫描和安全审计的 Nmap、用于测试基本连接性的 Ping、用于可视化网络路径的 Traceroute、用于显示网络连接的 Netstat、用于命令行数据包捕获的 Tcpdump、用于性能测试的 Iperf、用于各种网络操作的 Netcat、用于 DNS 查询的 Nslookup/Dig 以及用于通过 SSH 或 telnet 进行远程访问的 PuTTY。这些工具共同使网络管理员和安全专业人员能够诊断问题、优化性能、进行安全评估并维护从小型本地网络到大型企业环境的网络基础设施的整体健康和效率。\n文章 10 个 SCP 命令示例 文章 SCP 命令详解 视频 前 5 个 Linux 网络命令 视频 你需要知道的 60 个 Linux 命令 ◇文本处理 文本处理工具是使用户能够高效修改、处理和转换文本数据的实用程序或软件。这些工具通常用于脚本编写、数据清理和自动化任务。常见的文本处理工具包括用于搜索和替换的 sed（流编辑器）、用于模式扫描和数据提取的 awk 以及用于使用正则表达式搜索文本的 grep。其他流行的工具包括用于各种文本处理功能的 cut、sort、tr 和 uniq。这些命令行工具通常用于 UNIX/Linux 环境中，以处理大型文本文件、自动化工作流程并执行复杂的文本转换。\n文章 Linux 文本处理命令 视频 学习 Awk 对 Linux 用户至关重要 4. 版本控制系统 版本控制系统（VCS）是跟踪代码和文件随时间变化的工具，使多个用户能够协作项目、维护历史记录并管理代码库的不同版本。它们有助于跟踪修改、合并更改和解决冲突。VCS 有两种主要类型：集中式和分布式。集中式系统（如 Subversion 和 CVS）依赖于单一的中央仓库，而分布式系统（如 Git 和 Mercurial）允许每个用户拥有仓库的完整副本，包括其历史记录。分布式 VCS（如 Git）因其灵活性、分支能力和对协作工作流的强大支持而特别受欢迎。\n路线图 访问 Git \u0026amp; GitHub 专属路线图 官方 Git 官方 Mercurial 官方 Subversion 文章 什么是版本控制？ 视频 版本控制系统（VCS） ◇Git Git 是一种分布式版本控制系统，旨在跟踪软件开发过程中源代码的变化。它允许多个开发人员同时在同一项目上工作，维护修改的完整历史记录。Git 在每个开发人员的机器上都有本地仓库，支持离线工作和快速操作。它通过分支和合并支持非线性开发，促进并行工作流。Git 的分布式特性增强了协作、备份和实验。关键概念包括提交、分支、合并和远程仓库。凭借其速度、灵活性和强大的分支与合并能力，Git 已成为现代软件开发中版本控制的标准，支持 GitHub 和 GitLab 等平台。\n路线图 访问 Git \u0026amp; GitHub 专属路线图 课程 通过示例学习 Git - 通过小课程学习版本控制 文章 通过教程、新闻和技巧学习 Git - Atlassian 文章 Git 速查表 视频 Git \u0026amp; GitHub 初学者速成课程 动态 探索关于 Git 的热门帖子 5. VCS 托管 在团队中工作时，通常需要一个远程位置来存放代码，以便其他人可以访问它、创建自己的分支以及创建或审查拉取请求。这些服务通常包括问题跟踪、代码审查和持续集成功能。一些流行的选择包括 GitHub、GitLab、BitBucket 和 AWS CodeCommit。\n官方 GitHub 官方 GitLab 官方 BitBucket 视频 GitHub vs GitLab vs Bitbucket - 哪个更好？ ◇GitHub GitHub 是一个基于 Web 的版本控制和协作平台，使用 Git。它提供基于云的 Git 仓库托管，提供错误跟踪、任务管理和项目 wiki 等功能。GitHub 通过拉取请求促进代码审查，支持问题跟踪，并通过分叉和星标仓库等功能实现社交编码。它提供公共和私有仓库，使其在开源项目和私有开发中广受欢迎。GitHub 的生态系统包括与各种开发工具和 CI/CD 平台的集成。凭借 GitHub Actions 自动化、GitHub Packages 包管理和 GitHub Pages 网页托管等功能，它成为了一个全面的软件开发工作流平台，促进了全球开发人员之间的协作。\n路线图 访问 Git \u0026amp; GitHub 专属路线图 官方 GitHub 文章 如何在专业开发团队中使用 Git 视频 什么是 GitHub？ 动态 探索关于 GitHub 的热门帖子 6. 容器 容器是轻量级、可移植且隔离的环境，用于打包应用程序及其依赖项，从而在不同的计算环境中实现一致的部署。它们封装了软件代码、运行时、系统工具、库和设置，确保应用程序无论部署在哪里都能以相同的方式运行。容器共享主机操作系统的内核，使其比传统的虚拟机更高效。像 Docker 这样的流行容器化平台提供了创建、分发和运行容器的工具。该技术支持微服务架构，简化了应用程序部署，提高了可扩展性，并通过简化从开发到生产的流程和实现更高效的资源利用来增强 DevOps 实践。\n文章 什么是容器？ 文章 什么是容器？ 文章 容器 - The New Stack 视频 什么是容器？ 动态 探索关于容器的热门帖子 ◇Docker Docker 是一个开源平台，使用容器化技术自动化应用程序的部署、扩展和管理。它使开发人员能够将应用程序及其所有依赖项打包到称为容器的标准化单元中，确保在不同环境中的一致行为。Docker 提供了全机器虚拟化的轻量级替代方案，使用操作系统级虚拟化在单个主机上运行多个隔离系统。其生态系统包括用于构建、共享和运行容器的工具，如 Docker Engine、Docker Hub 和 Docker Compose。Docker 已成为现代 DevOps 实践的重要组成部分，促进了微服务架构、持续集成/部署管道以及开发和生产环境中的高效资源利用。\n路线图 访问 Docker 专属路线图 官方 Docker 文档 视频 Docker 教程 视频 55 秒简化 Docker 动态 探索关于 Docker 的热门帖子 7. Web 服务与代理配置 学习如何设置：\n正向代理 反向代理 负载均衡器 防火墙 缓存服务器 Web 服务器 ◇正向代理 正向代理，通常简称为代理，是位于客户端设备和互联网之间的服务器，负责将客户端的请求转发到 Web 服务器。它代表客户端行事，可能提供匿名性、安全性和访问控制等好处。正向代理可以缓存频繁请求的内容，过滤网络流量，绕过地理限制，并记录用户活动。它们通常在企业网络中使用，以强制执行互联网使用策略，通过隐藏内部网络细节来增强安全性，并通过缓存提高性能。与反向代理不同，反向代理代表服务器提供资源，而正向代理主要服务于客户端需求，作为客户端与更广泛的互联网之间的中介。\n文章 什么是正向代理？ 文章 正向代理与反向代理 视频 理解代理、正向代理和反向代理 ◇反向代理 反向代理是位于客户端设备和后端服务器之间的服务器，拦截来自客户端的请求并将其转发到适当的后端服务器。它代表服务器行事，提供负载均衡、缓存、SSL 终止和安全性等好处。反向代理可以将传入的流量分配到多个服务器以提高性能和可靠性，缓存频繁请求的内容以减少服务器负载，处理 SSL 加密和解密以减轻后端服务器的负担，并通过隐藏服务器细节提供额外的安全层。常见的用途包括提高 Web 应用程序性能、启用微服务架构以及增强 Web 托管环境的安全性。流行的反向代理软件包括 NGINX、HAProxy 和 Apache 的 mod_proxy。\n文章 什么是反向代理？ 文章 NGINX 文档 文章 理解 NGINX 作为反向代理 视频 代理与反向代理（实际示例） ◇缓存服务器 缓存服务器，也称为代理服务器或缓存服务器，是一种专用的网络服务器，用于本地保存网页和其他互联网内容，以减少带宽使用、服务器负载和感知延迟。它通过拦截客户端的请求，保存来自 Web 服务器的响应，并为后续相同信息的请求提供缓存内容。缓存服务器可以显著提高响应时间并减少网络流量，特别是对于频繁访问的内容。它们通常用于内容分发网络（CDN）、企业网络和互联网服务提供商，以优化性能、降低成本并通过从更接近最终用户的位置提供内容来增强用户体验。\n文章 什么是缓存？ 文章 什么是缓存服务器？ 文章 站点缓存 vs 浏览器缓存 vs 服务器缓存 视频 每个开发者都应该知道的缓存系统 ◇防火墙 防火墙是一种网络安全设备，它根据组织先前建立的安全策略监控和过滤传入和传出的网络流量。它是位于私有内部网络和公共互联网之间的屏障。防火墙的主要目的是允许无害的流量进入并阻止危险的流量。\n文章 什么是防火墙？ 文章 防火墙的类型 文章 简单防火墙（UFW） 文章 为什么我们需要防火墙？ 视频 防火墙与网络安全 - SimpliLearn 订阅 探索关于防火墙的热门文章 ◇负载均衡器 负载均衡器充当交通警察，位于服务器前面，将客户端请求路由到能够满足这些请求的所有服务器，以最大化速度和容量利用率，并确保没有一台服务器过载。如果其中一台服务器宕机，负载均衡器会将流量重定向到剩余的在线服务器。\n文章 什么是负载均衡？ 文章 负载均衡的概念和算法 文章 NGINX 反向代理与负载均衡 视频 什么是负载均衡器？ ◇Nginx（Web 服务器） NGINX 是一个高性能、开源的 Web 服务器、反向代理和负载均衡器。NGINX 以其处理并发连接的效率而闻名，它使用事件驱动、异步的架构，消耗最少的资源。它擅长提供静态内容、将请求代理到应用服务器以及在多个后端之间进行负载均衡。NGINX 因其提高网站性能、可扩展性和安全性的能力而被广泛使用。它支持各种协议，包括 HTTP、HTTPS、SMTP 和 WebSocket，并提供 SSL/TLS 终止、缓存和内容压缩等功能。NGINX 在小型和大型企业环境中都很受欢迎，是许多现代 Web 架构中的关键组件，特别是在微服务和容器化部署中。\n官方 Nginx 文章 Ubuntu 上的基本 NGINX 设置：功能性和安全性网站服务指南 视频 100 秒内解释 NGINX 订阅 探索关于 Nginx 的热门文章 8. 网络与协议 网络协议是标准化的规则和程序，用于管理数据在计算机网络中的传输、接收和解释。它们定义了数据通信中的格式、时序、序列和错误控制。关键协议包括：\nTCP/IP（传输控制协议/互联网协议）：互联网通信的基础套件。\nHTTP/HTTPS：用于网页浏览和 Web 上的安全数据传输。\nFTP/SFTP：文件传输协议。\nSMTP/POP3/IMAP：电子邮件通信协议。\nDNS：用于域名解析。\nDHCP：用于自动分配 IP 地址。\nSSL/TLS：用于安全的加密通信。\nUDP：用于快速、无连接的数据传输。\n文章 Cloudflare - 什么是 SSL？\n文章 Cloudflare - 什么是 TLS？\n文章 关于 HTTP 的一切你需要知道的\n文章 什么是 HTTP？\n文章 什么是 HTTPS？\n文章 什么是 DNS？\n视频 DNS 及其工作原理\n视频 DNS 记录\n视频 SSH vs SSL vs TLS\n视频 OpenSSH 完整指南\n◇FTP/SFTP（文件传输） FTP（文件传输协议）是一种标准的网络协议，用于在计算机网络中的客户端和服务器之间传输文件。它采用客户端-服务器模型，通常在客户端和服务器之间使用单独的控制和数据连接。FTP 允许用户上传、下载和管理远程系统上的文件，支持认证和匿名访问。尽管 FTP 因其简单性和兼容性而被广泛使用，但由于它以明文传输数据和凭证，存在安全限制。因此，更安全的替代方案如 SFTP（SSH 文件传输协议）和 FTPS（FTP 安全）在敏感数据传输中越来越受欢迎。尽管 FTP 已经存在多年，它仍然在各种文件传输需求中使用，特别是在遗留系统和安全性要求较低的环境中。\nSFTP（SSH 文件传输协议）是一种安全的文件传输协议，通过安全外壳（SSH）数据流提供文件访问、传输和管理功能。它被设计为 SSH 的扩展，以提供安全的文件传输能力。SFTP 在传输过程中加密命令和数据，防止窃听和中间人攻击。与传统的 FTP 不同，SFTP 使用单一连接，不分离控制通道和数据通道。它支持恢复中断的传输、目录列表和远程文件删除等功能。SFTP 在企业环境中广泛用于安全文件传输、自动化脚本以及作为 FTP 的更安全替代方案。它与 SSH 的集成使其成为系统管理员和开发人员在安全远程系统操作中的首选。\n文章 FTP vs SFTP vs FTPS 文章 什么是 SFTP？ ◇DNS（域名服务） DNS（域名系统）是一种分层的、分散的命名系统，用于连接到互联网或私有网络的计算机、服务或其他资源。它将人类可读的域名（如 www.example.com）转换为计算机用于在网络上相互识别的 IP 地址（如 192.0.2.1）。DNS 充当互联网的电话簿，使用户能够使用易于记忆的名称访问网站，而不是使用数字 IP 地址。该系统由 DNS 服务器、解析器和记录（如 A、CNAME、MX）组成，共同工作以高效地路由互联网流量。DNS 对互联网功能至关重要，影响从网页浏览和电子邮件到现代云架构中的负载均衡和服务发现的一切。\n文章 什么是 DNS？ 文章 DNS 的工作原理（漫画） 视频 DNS 及其工作原理 订阅 探索关于 DNS 的热门文章 ◇HTTP（Web 通信） HTTP（超文本传输协议）是万维网上数据通信的基础。它是一种应用层协议，支持客户端（通常是 Web 浏览器）和服务器之间传输各种类型的数据，主要是网页及其组件。HTTP 采用请求-响应模型，客户端发送资源请求，服务器响应请求的数据或错误消息。它是无状态的，意味着每个请求都独立于之前的请求。HTTP 支持各种方法（GET、POST、PUT、DELETE 等）以执行不同类型的操作。虽然最初设计为纯文本传输，但现在广泛采用其安全版本 HTTPS，使用加密来保护传输中的数据。\n文章 关于 HTTP 的一切你需要知道的 文章 什么是 HTTP？ 文章 HTTP 概述 视频 HTTP/1 到 HTTP/2 到 HTTP/3 视频 HTTP 速成课程与探索 ◇HTTPS（Web 通信） HTTPS（超文本传输协议安全）是 HTTP 的安全版本，加密客户端和服务器之间交换的数据。它使用 SSL/TLS 协议提供身份验证、数据完整性和保密性。HTTPS 通过加密所有通信来防止窃听、篡改和中间人攻击。它使用数字证书来验证网站的身份，增强信任和安全性。HTTPS 对于保护登录凭证和财务数据等敏感信息至关重要。它已成为安全 Web 通信的标准，主要浏览器将非 HTTPS 网站标记为“不安全”。HTTPS 还提供 SEO 优势，并且是许多现代 Web 功能和渐进式 Web 应用程序的必备条件。\n文章 什么是 HTTPS？ 文章 为什么 HTTPS 重要 文章 在服务器上启用 HTTPS 文章 HTTPS 的工作原理（漫画） 视频 HTTPS 真的能保护你吗？ ◇SSL/TLS（Web 通信） 安全套接字层（SSL）和传输层安全（TLS）是用于提供互联网通信安全性的加密协议。这些协议加密通过 Web 传输的数据，因此任何试图拦截数据包的人都无法解释数据。一个重要区别是，由于安全漏洞，SSL 现在已被弃用，大多数现代 Web 浏览器不再支持它。但 TLS 仍然是安全的并得到广泛支持，因此最好使用 TLS。\n文章 Cloudflare - 什么是 SSL？ 文章 Cloudflare - 什么是 TLS？ 文章 维基百科 - SSL/TLS 视频 SSH vs SSL vs TLS 视频 7 分钟内解释 SSL/TLS ◇SSH（Web 通信） SSH（安全外壳）是一种加密网络协议，用于在不安全的网络上安全地访问和管理远程机器。它提供加密通信，确保机密性和完整性，并允许安全文件传输、命令执行和隧道。SSH 广泛用于服务器、云基础设施和网络设备的远程管理，通常采用基于密钥的认证或密码。像 OpenSSH 这样的工具通常用于建立 SSH 连接，提供比 Telnet 等较旧、较不安全的协议更安全的替代方案。\n官方 什么是 SSH？ 文章 SSH 简介 文章 使用 SSH 进行 SFTP 视频 SSH 的工作原理 订阅 探索关于 SSH 的热门文章 ◇OSI 模型 OSI（开放系统互连）模型是一个概念框架，将电信或计算系统的功能标准化为七个抽象层。这些层从下到上分别是：物理层、数据链路层、网络层、传输层、会话层、表示层和应用层。每一层在数据通信过程中都有特定的用途，下层处理更多与硬件相关的任务，而上层处理软件和用户界面方面的问题。该模型有助于理解数据如何在网络中移动、排查网络问题以及设计网络协议和硬件。虽然在现实世界的实现中并不严格遵循 OSI 模型，但它仍然是网络工程师和开发人员的宝贵教育工具和参考点，为讨论网络操作和架构提供了通用语言。\n文章 什么是 OSI 模型？ 视频 OSI 模型 视频 OSI 与 TCP/IP 模型 ◇白名单/灰名单（电子邮件协议） 白名单涉及创建受信任实体（如 IP 地址、电子邮件地址或应用程序）的列表，这些实体被明确允许访问系统或发送消息。默认情况下，任何不在白名单上的内容都会被拒绝。白名单通过限制访问仅限已知和批准的实体来提供高级别的安全性，但它可能不够灵活，并且需要频繁更新以适应合法的更改。灰名单是一种更灵活的方法，主要用于电子邮件过滤。当从未知发件人收到电子邮件时，服务器会暂时拒绝它，并返回“稍后再试”的响应。合法的邮件服务器会在短暂的延迟后重新发送电子邮件，而垃圾邮件发送者通常不会重试，因此被阻止。这种方法通过利用垃圾邮件发送者通常不遵循重试机制的事实来减少垃圾邮件。灰名单可能比白名单更少侵入性，但它可能会对首次发件人造成轻微的电子邮件传递延迟。\n文章 灰名单的详细介绍 视频 灰名单 视频 如何将电子邮件地址加入白名单？ ◇SMTP（电子邮件协议） 电子邮件正在成为当今互联网上最有价值的服务之一。大多数互联网系统使用 SMTP 作为将邮件从一个用户传输到另一个用户的方法。SMTP 是一种推送协议，用于发送邮件，而 POP（邮局协议）或 IMAP（互联网消息访问协议）用于在接收方检索这些电子邮件。SMTP 是一种应用层协议。想要发送邮件的客户端打开与 SMTP 服务器的 TCP 连接，然后通过连接发送邮件。SMTP 服务器始终处于监听模式。一旦它侦听到来自任何客户端的 TCP 连接，SMTP 进程就会通过端口 25 启动连接。成功建立 TCP 连接后，客户端进程会立即发送邮件。\n文章 什么是 SMTP？ - Cloudflare 文章 SMTP - 维基百科 视频 什么是 SMTP 及其工作原理？ 订阅 探索关于无服务器的热门文章 ◇DMARC（电子邮件协议） DMARC（基于域的消息认证、报告和一致性）是一种电子邮件认证协议，建立在 SPF 和 DKIM 之上，以防范电子邮件欺骗和钓鱼攻击。它允许域名所有者指定电子邮件接收者应如何处理未通过认证检查的消息。DMARC 为域名所有者提供了一种反馈机制，以接收电子邮件认证结果的报告，帮助他们监控和改进电子邮件安全性。通过实施 DMARC 策略，组织可以提高其电子邮件的可交付性，保护其品牌声誉，并减少其域名被用于欺诈性电子邮件活动的可能性。DMARC 被主要电子邮件提供商广泛采用，并被认为是现代电子邮件安全策略的关键组成部分。\n官方 DMARC 视频 什么是 DMARC：你需要了解的电子邮件安全 订阅 探索关于安全的热门文章 ◇IMAP（电子邮件协议） IMAP（互联网消息访问协议）是一种标准的电子邮件协议，允许电子邮件客户端访问存储在邮件服务器上的消息。与 POP3 不同，IMAP 将电子邮件保留在服务器上，从而可以从多个设备访问并保持同步。它支持文件夹结构、消息标记和部分消息检索，使其在管理大量电子邮件时非常高效。IMAP 允许用户在服务器端进行搜索，减少带宽使用。它设计用于在服务器上长期存储邮件，非常适合需要从各种设备或位置访问电子邮件的用户。IMAP 的同步能力和服务器端管理功能使其成为大多数现代电子邮件系统的首选协议，特别是在移动和多设备环境中。\n文章 维基百科：互联网消息访问协议 视频 什么是 POP3、IMAP 和 SMTP？ ◇SPF（电子邮件协议） 发件人策略框架（SPF）用于验证电子邮件的发件人。通过设置 SPF 记录，互联网服务提供商可以验证邮件服务器是否有权为特定域名发送电子邮件。SPF 记录是 DNS TXT 记录，包含允许代表您的域名发送电子邮件的 IP 地址列表。\n文章 什么是 DNS SPF 记录？ 视频 什么是 SPF？发件人策略框架解释 ◇POP3S（电子邮件协议） POP3（端口 110）或 POP3s（端口 995）代表邮局协议。它是一种互联网标准协议，本地电子邮件软件客户端使用它通过 TCP/IP 连接从远程邮件服务器检索电子邮件。互联网服务提供商托管的电子邮件服务器也使用 POP3 来接收和保存其订阅者的电子邮件。这些订阅者会定期使用电子邮件客户端软件检查远程服务器上的邮箱，并下载发送给他们的电子邮件。一旦电子邮件客户端下载了电子邮件，它们通常会被从服务器上删除，尽管一些电子邮件客户端允许用户指定邮件在服务器上保留一段时间。\n文章 什么是 POP3？ 视频 什么是 POP3、IMAP 和 SMTP？ ◇域名密钥（电子邮件协议） 域名密钥是一种电子邮件认证方法，旨在验证电子邮件发件人的域名并确保消息的完整性。由雅虎开发，它是 DKIM（域名密钥识别邮件）的前身。域名密钥使用公钥加密，允许电子邮件系统验证消息是由授权发件人发送的，并且在传输过程中未被篡改。发送服务器使用私钥对发出的电子邮件进行签名，接收服务器可以使用发件人 DNS 记录中发布的公钥验证签名。虽然域名密钥在很大程度上已被 DKIM 取代，但它在旨在打击电子邮件欺骗和钓鱼攻击的电子邮件认证技术的发展中发挥了关键作用。\n文章 域名密钥识别邮件 视频 什么是 DKIM？域名密钥识别邮件 9. 云服务提供商 云服务提供商提供了一层API来抽象基础设施，并根据安全和计费边界进行资源调配。云运行在数据中心的服务器上，但这些抽象巧妙地给人一种与单一“平台”或大型应用程序交互的错觉。通过云服务提供商快速调配、配置和保护资源的能力，是现代DevOps巨大成功和复杂性的关键。\n文章 云服务提供商 文章 什么是云服务提供商？ 订阅 探索关于云的顶级文章 ◇AWS 自2011年以来，亚马逊网络服务（AWS）一直是市场领先的云计算平台，领先于Azure和Google Cloud。AWS提供超过200种服务，数据中心遍布全球。AWS服务是一个在线平台，提供可扩展且经济高效的云计算解决方案。它是一个广泛采用的云平台，提供多种按需操作，如计算能力、数据库存储、内容交付等。\n课程 100小时AWS完整课程2024 官方 AWS官网 官方 AWS云基础 官方 亚马逊网络服务概述 文章 创建AWS账户 订阅 探索关于AWS的顶级文章 ◇Azure 微软Azure是一个全面的云计算平台，提供广泛的服务，用于通过微软管理的数据中心构建、部署和管理应用程序。它提供基础设施即服务（IaaS）、平台即服务（PaaS）和软件即服务（SaaS）解决方案，支持各种编程语言、工具和框架，包括微软特定和第三方系统。Azure的服务涵盖计算、分析、存储、网络等，使企业能够扩展和转型其业务，利用人工智能和机器学习，并实施强大的安全措施，同时通过其按需付费的定价模式可能降低IT成本。\n官方 Azure官网 开源 微软Azure指南 视频 微软Azure基础认证课程（AZ-900） 订阅 探索关于Azure的顶级文章 ◇Google Cloud Google Cloud是谷歌的云计算服务产品，提供超过150种产品/服务供选择。它由一组物理资产（如计算机和硬盘驱动器）和虚拟资源（如虚拟机）组成，这些资源位于谷歌的数据中心内。它运行在谷歌内部用于其终端用户产品（如搜索、Gmail、Google Drive和YouTube）的相同基础设施上。\n官方 Google Cloud 文章 成为Google Cloud认证专业架构师的5个技巧 视频 Google Cloud平台完整课程2023 订阅 探索关于云的顶级文章 10. 无服务器计算 无服务器计算是一种云计算执行模型，云提供商动态管理基础设施，使开发人员能够专注于编写代码。在此模型中，资源根据需求自动分配和扩展，计费基于实际使用情况而非预购容量。无服务器架构通常用于事件驱动的工作负载和微服务，提高开发效率并减少运营开销。流行的无服务器计算平台包括 AWS Lambda、Azure Functions 和 Google Cloud Functions。\n文章 什么是无服务器计算？ 视频 什么是无服务器计算？ 动态 探索关于无服务器计算的热门帖子 ◇AWS Lambda AWS Lambda 是一种无服务器计算服务，允许您运行代码而无需预置或管理服务器。它会自动扩展，响应触发器执行代码，并且仅按消耗的计算时间计费。Lambda 支持多种编程语言，并与其他 AWS 服务无缝集成，使其成为构建微服务、自动化任务和处理数据流的理想选择，同时最大限度地减少运营开销。\n官方 AWS Lambda 简介 视频 AWS Lambda 教程：入门无服务器计算 动态 探索关于 AWS 的热门帖子 ◇Cloudflare Cloudflare 是一家互联网公司，提供一系列服务来帮助保护和加速网站和应用程序。其核心是内容分发网络（CDN）和反向代理云提供商。这意味着它充当网站源服务器与其访问者之间的中介，缓存内容并过滤恶意流量。Cloudflare 由 Matthew Prince、Lee Holloway 和 Michelle Zatlyn 于 2009 年 7 月创立。该公司获得风险投资，并于 2019 年 8 月向纽约证券交易所提交了 S-1 文件进行 IPO。它于 2019 年 9 月 13 日以每股 15 美元的价格公开交易。\n官方 Cloudflare 视频 Cloudflare 简介 动态 探索关于 Cloudflare 的热门帖子 11. 资源预配 资源预配是指设置和配置必要的 IT 基础设施以支持应用程序或服务的过程。这包括分配和准备资源，如服务器、存储、网络和软件环境。预配可以手动完成，但在现代 DevOps 实践中，通常使用 Terraform、Pulumi 或 CloudFormation 等工具进行自动化。这些工具允许基础设施即代码（IaC），其中整个预配过程在版本控制的脚本或模板中定义。这种方法实现了跨环境的一致、可重复部署，减少了人为错误，并促进了快速扩展和灾难恢复。\n文章 什么是资源预配？ - RedHat 文章 什么是资源预配？ - IBM 视频 开放答案：什么是资源预配？ ◇Terraform Terraform 是 HashiCorp 开发的开源基础设施即代码（IaC）工具，用于使用声明性配置文件定义、预配和管理云和本地基础设施。它支持 AWS、Azure 和 Google Cloud 等多个云提供商，以及各种服务和平台，实现了跨多样化环境的基础设施自动化。Terraform 的状态管理和模块化结构允许高效扩展、重用和版本控制基础设施。它广泛用于自动化基础设施预配，减少手动错误，并提高基础设施的一致性和可重复性。\n路线图 访问专用 Terraform 路线图 课程 完整的 Terraform 课程 官方 Terraform 文档 官方 Terraform 教程 文章 如何扩展您的 Terraform 基础设施 动态 探索关于 Terraform 的热门帖子 12. 配置管理 配置管理是一种系统工程过程，用于在产品生命周期内建立产品属性的一致性。在技术领域，配置管理是一种 IT 管理过程，用于跟踪 IT 系统的各个配置项。IT 系统由粒度不同的 IT 资产组成。IT 资产可以代表一个软件、一台服务器或一组服务器。以下重点介绍配置管理在 IT 软件资产和软件资产 CI/CD 中的直接应用。软件配置管理是一种系统工程过程，用于跟踪和监控软件系统配置元数据的更改。在软件开发中，配置管理通常与版本控制和 CI/CD 基础设施一起使用。本文重点介绍其在敏捷 CI/CD 软件环境中的现代应用和使用。\n文章 什么是配置管理？ 文章 什么是配置管理？ - RedHat 视频 为什么您需要学习配置管理 ◇Ansible Ansible 是一种开源的自动化工具，用于配置管理、应用程序部署和任务自动化。它通过使用声明性语言定义所需状态和配置，简化了管理和编排基础设施的过程。Ansible 使用 YAML 文件（称为 playbooks）来描述要在远程系统上执行的任务。它采用无代理架构，这意味着它使用 SSH 或其他远程协议在目标机器上执行任务，而无需安装额外的软件。Ansible 广泛用于自动化重复任务、确保一致性以及管理跨各种环境的大规模部署。\n课程 Ansible 初学者完整课程 官方 Ansible 网站 视频 100 秒了解 Ansible 动态 探索关于 Ansible 的热门帖子 13. CI/CD 工具 CI/CD 是一种通过在应用程序开发的各个阶段引入自动化来频繁向客户交付应用程序的方法。CI/CD 的主要概念包括持续集成、持续交付和持续部署。CI/CD 解决了新代码集成可能对开发和运维团队造成的问题。具体来说，CI/CD 在应用程序的整个生命周期中引入了持续的自动化和监控，从集成和测试阶段到交付和部署。这些相互关联的实践通常被称为“CI/CD 管道”，并由开发和运维团队以敏捷的方式共同支持，采用 DevOps 或站点可靠性工程（SRE）方法。\n文章 CI vs CD 文章 什么是 CI/CD？ 视频 100 秒解释 DevOps CI/CD 视频 5 分钟了解 CI/CD 动态 探索关于 CI/CD 的热门帖子 ◇CircleCI CircleCI 是一个流行的持续集成和持续交付（CI/CD）平台，它自动化了软件项目的构建、测试和部署过程。它支持多种编程语言，并与各种版本控制系统集成，主要是 GitHub 和 Bitbucket。CircleCI 使用 YAML 配置文件来定义管道，允许开发人员指定复杂的工作流、并行作业执行和自定义环境。它提供了缓存、工件存储和 Docker 层缓存等功能，以加快构建速度。通过其基于云和自托管的选项，CircleCI 为各种规模的项目提供了可扩展的解决方案，帮助团队提高代码质量、加速发布周期并简化开发工作流。\n官网 CircleCI 网站 视频 CircleCI 初学者教程 动态 探索关于 CI/CD 的热门帖子 ◇GitLab CI GitLab CI 是 GitLab 生态系统中的一个集成持续集成和交付平台。它通过 YAML 文件中定义的管道自动化构建、测试和部署代码更改的过程。GitLab CI 提供了并行执行、容器注册表集成和自动 DevOps 等功能，使团队能够直接从其 GitLab 仓库中实施强大的 CI/CD 工作流，而无需额外的工具或基础设施。\n官网 GitLab 网站 官方文档 GitLab 文档 视频 GitLab CI/CD 管道初学者教程（2024） 动态 探索关于 GitLab 的热门帖子 ◇GitHub Actions GitHub Actions 是一个直接集成到 GitHub 仓库中的持续集成和持续交付（CI/CD）平台。它允许开发人员自动化软件工作流，包括构建、测试和部署应用程序。Actions 在 YAML 文件中定义，并由各种 GitHub 事件触发，如推送、拉取请求或计划任务。该平台提供了一个预构建 Actions 的市场，并支持自定义 Actions。GitHub Actions 提供了矩阵构建、并行作业执行，并支持多种操作系统和语言。它与 GitHub 的生态系统无缝集成，促进了自动化代码审查、问题跟踪和项目管理。该工具使开发人员能够在 GitHub 工作流中高效地实施 DevOps 实践，从而提高生产力和代码质量。\n课程 GitHub Actions 认证 - 通过考试的全课程 官方文档 GitHub Actions 文档 视频 什么是 GitHub Actions？ 视频 使用 GitHub Actions 自动化您的工作流 动态 探索关于 GitHub 的热门帖子 14. 密钥管理 密钥管理是指在组织的IT基础设施中安全地处理、存储和分发敏感信息，如密码、API密钥和证书。它涉及使用专门的工具和实践来保护密钥免受未经授权的访问，同时确保在需要时授权系统和用户可以访问这些密钥。密钥管理解决方案通常提供静态和传输中的加密、访问控制、审计、轮换策略以及与各种平台和服务的集成等功能。这些系统旨在集中存储密钥，降低暴露风险，自动化密钥生命周期管理，并提供与应用程序和DevOps工作流的无缝集成。在现代复杂的IT环境中，有效的密钥管理对于维护安全性、合规性和操作效率至关重要。\n文章 如何在Web应用程序中管理密钥？ 文章 为什么DevSecOps团队需要密钥管理 视频 生产环境中管理密钥的DevOps技巧 ◇Vault HashiCorp Vault 是一款专为安全管理密钥和保护敏感数据（如密码、API密钥和加密密钥）而设计的工具。它提供集中式密钥管理、访问控制和审计功能。Vault 支持多种身份验证方法和动态密钥，允许动态生成密钥并管理其生命周期。它还提供强大的加密功能，包括静态和传输中的数据加密。Vault 广泛应用于DevOps环境中，以确保敏感信息的安全和可扩展管理，并与各种基础设施和应用程序平台集成。\n官方 HashiCorp Vault 开源 hashicorp/vault 视频 180秒了解HashiCorp Vault 视频 HashiCorp Vault 初学者教程 15. 基础设施监控 监控是指使基础设施的性能和状态可见的实践。本节包含用于监控的常见工具。这是一个供应商众多的领域——在研究特定产品或项目的材料时要谨慎，因为有许多相互矛盾的观点和策略在使用。对于最复杂的面向互联网的应用程序，没有单一的解决方案，因此了解这些工具的优缺点将有助于您规划如何为特定目标监控系统。\n文章 优化DevOps团队基础设施监控的最佳实践 文章 有效进行云原生基础设施监控的七个步骤 视频 使用Telegraf、Grafana和InfluxDB进行基础设施监控基础 订阅 探索关于基础设施的热门文章 ◇Prometheus Prometheus 是一个开源的系统监控和警报工具包，专为可靠性和可扩展性而设计。它具有多维数据模型、灵活的查询语言（PromQL）和高效的时间序列数据库。Prometheus 以给定的时间间隔从配置的目标收集指标，评估规则表达式，显示结果，并在观察到指定条件时触发警报。它采用拉取模型，从HTTP端点抓取指标，并支持动态环境的服务发现。Prometheus 特别适合监控微服务和容器化环境，与Kubernetes等系统无缝集成。其生态系统包括用于第三方系统的各种导出器和内置的警报管理器。Prometheus 在云原生架构中被广泛采用，是现代可观测性堆栈的核心组件，通常与Grafana等工具一起用于可视化。\n官方 Prometheus 网站 视频 Prometheus 监控系统简介 | 关键概念和功能 订阅 探索关于Prometheus的热门文章 ◇Grafana Grafana 是一个开源的分析和交互式可视化Web应用程序。它连接到各种数据源，包括时间序列数据库、关系数据库和云服务，以创建可定制的仪表板。Grafana 擅长可视化基础设施和应用程序分析的时间序列数据，支持多种图表类型和插件。它具有警报功能、用户身份验证和基于角色的访问控制。Grafana 通常用于监控系统指标、应用程序性能和业务分析。其灵活性和从多个数据源组合数据的能力使其在DevOps环境中广受欢迎，用于创建全面的监控解决方案。Grafana 的用户友好界面和广泛的定制选项使用户能够创建视觉上吸引人且信息丰富的仪表板，用于实时数据可视化和分析。\n官方 Grafana 官方 Grafana 网络研讨会和视频 视频 服务器监控 // Prometheus 和 Grafana 教程 订阅 探索关于Grafana的热门文章 ◇Datadog Datadog 是一个用于大规模应用程序的监控和分析平台。它包括基础设施监控、应用程序性能监控、日志管理和用户体验监控。Datadog 通过400多个集成聚合整个堆栈的数据，用于故障排除、警报和图表绘制。\n官方 Datadog 网站 官方 Datadog 文档 订阅 探索关于DevOps的热门文章 16. 日志管理 日志管理是处理由所有软件应用程序及其运行基础设施生成的日志事件的过程。它包括日志的收集、聚合、解析、存储、分析、搜索、归档和处置，最终目标是利用这些数据进行故障排除和获取业务洞察，同时确保应用程序和基础设施的合规性和安全性。\n官方 日志管理：DevOps团队需要了解的内容 文章 日志管理简介 文章 Kubernetes日志记录：记录什么以及如何记录 ◇Loki Loki是由Grafana Labs设计的一个水平可扩展、高可用、多租户的日志聚合系统。它的设计初衷是成本效益高且易于操作，特别适合存储和查询来自Kubernetes集群的日志。Loki索引的是日志的元数据而非全文，这使得它比传统的日志管理系统更节省资源。它使用与Prometheus相同的查询语言（LogQL），使得熟悉Prometheus的用户更容易上手。Loki与Grafana无缝集成以实现可视化，并经常与Prometheus和Grafana一起用于云原生可观测性堆栈中。其设计注重简洁性，使其成为在容器化环境中寻求高效日志管理的组织的一个有吸引力的选择。\n官方 Loki 官方 Loki文档 视频 认识Grafana LOKI，一个适用于一切的日志聚合系统 动态 探索关于Grafana的热门帖子 ◇Elastic Stack Elastic Stack，前身为ELK Stack，是一组用于实时搜索、分析和可视化数据的开源工具。它由四个主要组件组成：Elasticsearch（一个分布式搜索和分析引擎）、Logstash（一个数据处理管道）、Kibana（一个数据可视化管理工具）和Beats（轻量级数据收集器）。这些工具共同使用户能够从各种来源收集数据，处理和丰富数据，将其存储在可搜索的格式中，并创建交互式可视化和仪表板。Elastic Stack广泛用于日志分析、应用程序性能监控、安全信息和事件管理（SIEM）以及商业智能应用，提供了处理大量多样化数据的可扩展性和灵活性。\n官方 Elastic Stack 文章 Logstash vs Fluentd 视频 掌握Elastic Stack：Elastic Stack概述 动态 探索关于ELK的热门帖子 17. 容器编排 容器编排是管理和自动化容器生命周期的过程，包括其部署、扩展和跨多个主机的网络连接。这是在生产环境中运行复杂容器化应用程序的关键技术。\n通过利用Kubernetes、Docker Swarm和Apache Mesos等工具，组织可以确保其应用程序的高可用性、可扩展性和可靠性。容器编排通过自动化日常任务简化了操作，并为微服务、云原生开发和DevOps实践提供了坚实的基础。\n文章 什么是容器编排？ 文章 什么是Kubernetes？ 文章 Docker Swarm 视频 Kubernetes简介 ◇Kubernetes Kubernetes是一个开源的容器管理平台，也是该领域的主导产品。使用Kubernetes，团队可以在多个底层主机上部署镜像，并通过YAML定义其所需的可用性、部署逻辑和扩展逻辑。Kubernetes源自Google的内部平台Borg，该平台用于配置和分配计算资源（类似于Microsoft Azure的Autopilot和Aquaman系统）。Kubernetes的流行使其成为DevOps工程师越来越重要的技能，并引发了整个行业中平台团队的创建。这些平台工程团队通常存在的唯一目的是使其产品开发同事能够轻松使用Kubernetes。\n路线图 访问专门的Kubernetes路线图 官方 Kubernetes网站 开源 kubernetes/kubernetes 文章 入门：Kubernetes的由来、是什么以及为什么你应该关注 文章 Kubernetes概述 视频 完整的Kubernetes课程 - 从初学者到专家 动态 探索关于Kubernetes的热门帖子 18. 应用监控 应用监控涉及对软件应用程序的持续观察和分析，以确保其性能最佳、识别问题并提供对其操作的洞察。此过程包括跟踪响应时间、错误率、资源利用率（CPU、内存和磁盘）以及事务性能等指标。应用监控工具收集和分析数据以检测异常，提供潜在问题的警报，并提供应用程序行为和性能的详细洞察。通过监控应用程序，组织可以主动解决问题、优化性能并改善用户体验，最终确保其软件系统的可靠性和效率。\n文章 应用基础与高级监控技术 文章 为什么遗留应用也需要你的监控关爱 视频 应用监控 - 四大黄金信号 订阅 探索关于监控的热门文章 ◇OpenTelemetry OpenTelemetry 是一个用于云原生软件的开源可观测性框架，提供了一种标准化的方式来收集和导出遥测数据，如指标、日志和跟踪。它旨在通过提供供应商中立、统一的 API、库、代理和工具，使可观测性成为云原生应用程序的内置功能。OpenTelemetry 简化了跨不同语言和平台的可观测性实现，使开发人员能够一次性检测其代码并将数据发送到多个后端。它支持许多流行框架和库的自动检测，减少了向应用程序添加可观测性所需的工作量。通过提供一致的数据收集和导出方法，OpenTelemetry 促进了现代分布式软件环境中可观测性工具和平台之间更好的互操作性。\n官方 OpenTelemetry 网站 官方 OpenTelemetry 文档 视频 什么是 OpenTelemetry？ 视频 OpenTelemetry 课程 - 理解软件性能 19. 制品管理 在软件开发中，制品是开发生命周期中产生的各种输出，包括源代码、二进制文件、文档、配置文件、构建输出和测试结果。这些制品对于管理、部署和维护应用程序至关重要，因为它们为开发、测试和生产环境提供了必要的资源和文档。它们有助于跟踪项目进度，确保一致性，并促进软件系统的高效交付和操作。\n文章 什么是制品 - Oracle 文章 什么是制品 - Atlassian 视频 了解 GitLab 制品和缓存 ◇Artifactory Artifactory 是一个通用的 DevOps 解决方案，用于托管、管理和分发二进制文件和制品。任何类型的二进制软件——如应用程序安装程序、容器镜像、库、配置文件等——都可以使用 Artifactory 进行管理、保护、存储和交付。名称“Artifactory”反映了它可以托管软件开发“工厂”中所需的任何类型的“制品”。在软件开发中，制品是在软件开发和交付过程中产生的任何对象。制品包括用于安装和运行应用程序的文件，以及配置或管理软件所需的任何补充信息。Artifactory 作为 DevOps 流程的中心枢纽。所有制品、依赖项、包等最终都会被放入并从 Artifactory 中提取。\n官方 Artifactory 网站 视频 5 分钟了解 JFrog Artifactory 的关键特性 订阅 探索关于 Artifactory 的热门文章 20. GitOps GitOps 是一种使用 Git 作为单一事实来源来管理基础设施和应用程序部署的范式。它通过使用 Git 仓库存储基础设施和应用程序的声明性描述来扩展 DevOps 实践。对期望状态的更改通过拉取请求进行，这些请求会触发自动化过程以使实际状态与期望状态保持一致。GitOps 依赖于持续部署工具，这些工具会自动将实时系统与 Git 中定义的期望状态进行协调。这种方法提供了基础设施的版本控制、改进的可审计性、更轻松的回滚和增强的协作等好处。GitOps 特别适合云原生应用程序和 Kubernetes 环境，提供了一种简化的方法来管理复杂的分布式系统。\n文章 GitOps 指南 视频 什么是 GitOps，GitOps 如何工作及其为何如此有用 订阅 探索关于 GitOps 的热门文章 ◇ArgoCD Argo CD 是一个基于 GitOps 方法的 Kubernetes 持续交付工具。它用于通过持续同步生产环境中的期望应用程序状态与实际应用程序状态来自动化云原生应用程序的部署和管理。在 Argo CD 工作流中，应用程序的更改通过提交代码或配置更改到 Git 仓库来进行。Argo CD 监控仓库并自动使用持续交付管道将更改部署到生产环境。该管道由 Git 仓库的更改触发，并负责构建、测试和将更改部署到生产环境。Argo CD 旨在成为一种简单高效的管理云原生应用程序的方式，因为它允许开发人员使用熟悉的工具和流程对系统进行更改，并提供系统所有更改的清晰和可审计的历史记录。它通常与 Helm 等工具结合使用，以自动化云原生应用程序的部署和管理。\n官方 Argo CD - Argo 项目 视频 ArgoCD 初学者教程 视频 什么是 ArgoCD 订阅 探索关于 ArgoCD 的热门文章 21. 服务网格 服务网格是一个专门的基础设施层，用于管理分布式应用程序中微服务之间的通信。它提供了负载均衡、服务发现、加密、可观测性和流量管理等功能，使服务能够安全高效地进行通信。通过将网络相关的关注点从应用代码中抽象出来，服务网格增强了可靠性和安全性，同时简化了微服务交互的管理。流行的服务网格实现包括 Istio、Linkerd 和 Consul。\n文章 什么是服务网格？ 文章 关于服务网格的最新消息 (TNS) 视频 Istio \u0026amp; 服务网格 - 15分钟简单解释 订阅 探索关于服务网格的热门文章 ◇Istio Istio 是一个开源的服务网格平台，提供了一种控制微服务之间如何共享数据的方式。它包括允许 Istio 集成到任何日志平台、遥测或策略系统中的 API。Istio 设计用于在各种环境中运行：本地、云托管、Kubernetes 容器中、虚拟机中运行的服务等。\n文章 什么是 Istio？ 视频 Istio 服务网格解释 订阅 探索关于 Istio 的热门文章 ◇Consul Consul 是一个服务网格解决方案，提供了一个功能齐全的控制平面，具有服务发现、配置和分段功能。这些功能可以根据需要单独使用，也可以一起使用以构建完整的服务网格。Consul 需要一个数据平面，并支持代理和原生集成模型。Consul 附带一个简单的内置代理，因此一切都可以开箱即用，但也支持第三方代理集成，如 Envoy。\n官方 什么是 Consul？ 开源 Consul 指南 视频 Consul 服务网格初学者教程 订阅 探索关于 HashiCorp 的热门文章 22. 云设计模式 云设计模式是解决云计算架构中常见问题的可重用解决方案。这些模式解决了分布式系统中与可扩展性、可靠性、安全性和性能相关的挑战。它们提供了设计和实现云原生应用程序的最佳实践，涵盖了数据管理、消息传递、弹性和部署等方面。示例包括用于处理故障的断路器模式、用于分离读写操作的 CQRS 模式以及用于将应用程序组件部署到单独进程或容器中的边车模式。通过利用这些模式，开发人员可以创建更健壮、高效和可维护的云应用程序，从而更好地利用云平台的优势。\n课程 30 个云设计模式深入解析 官方 云设计模式 文章 云设计模式、架构和实现 ◇可用性 可用性是指系统正常运行并按预期工作的时间百分比，通常称为正常运行时间。可用性可能受到硬件或软件错误、基础设施问题、恶意攻击和系统负载的影响。许多云提供商通常为用户提供服务水平协议 (SLA)，其中规定了承诺的正常运行时间/停机时间的确切百分比。可用性与可靠性相关。例如，一家公司可能承诺其服务的正常运行时间为 99.99%。\n文章 在 SRE 中定义可用性、可维护性和可靠性 文章 实现高可用性的技术 视频 SLIs、SLOs、SLAs，哦我的天！(SRE 实现 DevOps) ◇数据管理 数据管理是云应用程序的关键要素，影响大多数质量属性。数据通常托管在不同位置和跨多个服务器上，原因包括性能、可扩展性或可用性，这可能会带来一系列挑战。例如，必须保持数据一致性，并且通常需要在不同位置之间同步数据。此外，数据应在静止、传输和通过授权访问机制时受到保护，以维护机密性、完整性和可用性的安全保证。有关更多信息，请参阅 Azure 安全基准数据保护控制。\n文章 数据管理模式 视频 什么是主数据管理 订阅 探索关于数据管理的热门文章 ◇设计与实现 良好的设计包括组件设计和部署的一致性和连贯性、简化管理和开发的可维护性以及允许组件和子系统在其他应用程序和其他场景中使用的可重用性。在设计和实现阶段做出的决策对云托管应用程序和服务的质量和总拥有成本有巨大影响。\n文章 设计与实现模式 ◇管理与监控 DevOps 管理和监控涉及监督从规划、开发、集成和测试、部署到操作的整个开发过程。它涉及生产环境中应用程序、服务和基础设施状态的完整实时视图。实时流、历史回放和可视化等功能是应用程序和服务监控的关键组件。\n文章 管理与监控入门指南 订阅 探索关于监控的热门文章 ","permalink":"https://yuuniji.us.kg/posts/devops-roadmap/","summary":"\u003ch2 id=\"1-学习一门编程语言\"\u003e1. 学习一门编程语言\u003c/h2\u003e\n\u003cp\u003e选择哪种语言并不重要，但至少学习一门编程语言是至关重要的。你可以使用该语言编写自动化脚本。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cem\u003e文章\u003c/em\u003e \u003ca href=\"https://cs.fyi/guide/programming-language-for-devops\"\u003e选择 DevOps 编程语言的指南\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e该指南推荐 Python 或 Go 作为编程语言，Bash 或 PowerShell Core 作为 DevOps 中的 Shell 脚本语言。Python 功能多样，广泛用于自动化和工具开发，而 Go 对于 Kubernetes 和 Docker 等容器技术至关重要。Bash 是 Linux 环境的理想选择，而 PowerShell Core 是跨平台的，适用于 Windows 和 Linux。更多详细信息，请查看完整指南 \u003ca href=\"https://cs.fyi/guide/programming-language-for-devops\"\u003e这里\u003c/a\u003e。\u003c/p\u003e","title":"DevOps 学习路线图"},{"content":"★传统教科书的问题 核心问题\n传统教科书的目标：快速教授实用且礼貌的日语，但忽略了语言的真正逻辑。 主要问题： 以英语的思维方式教授日语，导致无法真正理解日语的表达方式。 试图翻译英语短语，而不是教授日语的语法体系。 忽略汉字学习，导致学习者在实际应用时完全无法阅读和理解日语文本。 过早教授敬语，却没有打好基础，导致学习者困惑。 强调完整句子表达（如 \u0026quot;Hi, my name is Smith\u0026quot;），但日语中很多信息是通过语境省略的。 解决方案：用日语的思维学日语\n核心理念：从日语的逻辑出发，而不是从英语翻译过来。 方法： 系统介绍日语的语法构件，帮助学习者建立牢固的基础。 逐步构建语法体系，而不是为了教授特定短语而跳跃教学。 初期翻译会尽量逐字对应，帮助理解日语的表达方式，而不是用流畅的英语翻译。 先学会最基础但最难的部分（如动词活用规则），这样后续学习会更顺畅。 学习建议\n避免直接翻译\n不要试图从英语翻译到日语，而是直接学习日语表达方式。 询问母语者正确的表达方式，并理解其中的逻辑。 通过例子学习\n语感比死记硬背更重要，多看例子，有疑问时再查语法。 不要因为一开始不懂就停下来，随着积累，理解会逐步加深。 多接触真实日语\n通过漫画、网站、论坛等获取大量日语输入。 练习听说，优先和母语者交流，而不是只依赖语音教材。 保持耐心\n语言学习是一个积累的过程，每学会一个单词或语法点，都是向前迈进了一步。 ★日语书写系统 假名\n种类：日语有 平假名 和 片假名，两者发音相同，各约 50 个字符，源自汉字。 用途： 平假名：用于语法（如助词）、难写汉字的替代、口语、拟声词、小孩学习。 片假名：主要用于外来词（因汉字无法表示罗马发音）。 汉字： 书面日语中的主要组成部分（名词、动词、形容词）。 在没有空格的句子中，起到区分单词的作用。 由于日语同音词多，汉字有助于区分词义。 语调\n假名发音规则： 每个假名的发音都是 [ 元音 ] 或 [ 辅音 + 元音 ]，例外是「ん」和「ン」。 结构固定，使得学习正确的语调变得困难。 语调的重要性： 影响口语自然度，错误语调易导致典型的外国口音。 同音词可能因语调不同而有不同含义。 学习方法： 不能靠记忆规律（因场景、方言变化大）。 最有效的方法是模仿 日本人的发音，认真听并练习。 ◇平假名 概述\n平假名是日语的基础发音单元，可以书写所有日语，但因书面日语无空格，仅用平假名难以辨认。 书写规则： 遵循笔顺，确保书写流畅，避免养成坏习惯。 建议使用手写字体教材进行练习。 学习方法： 录音对比发音，确保准确性。 最有效的学习方式仍是 纸和笔 练习。 平假名表\n「ん」是唯一没有元音的假名。 特殊发音： 「し」(shi)、ち (chi)、つ (tsu) 发音与一般辅音+元音不同。 「r」音 需舌头贴住上颚发音。 注意 「tsu」与「su」的区别。 n w r y m h n t s k a ん(n) わ ら や ま は な た さ か あ ゐ* り み ひ に ち(chi) し(shi) き い る ゆ む ふ(fu) ぬ つ(tsu) す く う ゑ* れ め へ ね て せ け え を(o) ろ よ も ほ の と そ こ お * = 已不使用\n浊音与半浊音\n浊音：在假名右上角加「゛」（浊点）形成，如： か → が (ka → ga) さ → ざ (sa → za) 半浊音：在假名右上角加「゜」（半浊点），仅用于「は」行： は → ぱ (ha → pa) ひ → ぴ (hi → pi) p b d z g a ぱ ば だ ざ が a ぴ び ぢ(ji) じ(ji) ぎ i ぷ ぶ づ(dzu) ず ぐ u ぺ べ で ぜ げ e ぽ ぼ ど ぞ ご o 小「や」「ゆ」「よ」的组合\n用小型假名「ゃ」「ゅ」「ょ」连接 / i / 列假名，形成新发音，如： き + ゃ = きゃ (kya) し + ゅ = しゅ (shu) ち + よ = ちょ (cho) p b j g r m h n c s k ya ぴゃ びゃ じゃ ぎゃ りゃ みゃ ひゃ にゃ ちゃ しゃ きゃ ya ぴゅ びゅ じゅ ぎゅ りゅ みゅ ひゅ にゅ ちゅ しゅ きゅ yu ぴょ びょ じょ ぎょ りょ みょ ひょ にょ ちょ しょ きょ yo 小「つ」（促音）\n小「つ」表示后续辅音的重复，加强发音，如： がっき (gakki) はっぱ (happa) ろっく (rokku) 示例：\n假名 读音 例词 がっき gakki 乐器 はっぱ happa 叶子 ろっく rokku 摇滚 トラック to-rak-ku 卡车 ざっし zas-shi 杂志 カップ kap-pu 摇滚 长元音\n通过在假名后加相应的元音来拉长发音： 元音 用于拉长的假名 /a/ あ /i/, /e/ い /u/, /o/ う 示例：\n假名 读音 词义 がくせい ga-ku-sei 学生 せんせい sen-sei 老师 きょう kyou 今天 おはよう o-ha-you 早安 おかあさん o-kaa-san 母亲 ⚠ 注意：\n长元音的原理很简单，试着分别发音「か」和「あ」，然后再快速连读。很快你就会发现好像是在拉长 / ka / 的发音时间。发长元音的时候，要记住其实是在发两个音。 「ここ」(koko, 这里) vs. 「こうこう」(koukou, 中学) 「おばさん」(obasan, 大妈) vs. 「おばあさん」(obaasan, 祖母) 极少数情况下 / e / 元音也会用「え」来拉长，/ o / 元音也会用「お」来拉长。这种情况的例子包括 「おねえさん」、「おおい」和「おおきい」。要注意这些例外情况，不过好在数量很少。 练习资源\n书写练习： 儿童文字表 平假名片假名练习用格纸 Hiragana/Katakana图表 平假名书写练习表1 平假名书写练习表2 平假名书写练习表3 空白书写练习表 自我介绍 片假名(含平假名)网站 助记符jpg1 助记符jpg2 助记符jpg3 助记符jpg4 助记符jpg5 助记符jpg6 助记符pdf 助记符网站1 助记符网站2 助记符网站3 助记符网站4 Hiragana空白填充印刷品1 Hiragana空白填充印刷品2 NHK日语五十音 NHK的日语学习平台 1000汉字列表 发音练习： 可下载音频文件进行对照练习（basic_sounds.zip）。 推荐古诗「いろは」：包含所有平假名（除「ん」外），适合作为练习材料。 ◇平假名练习 平假名表填空\n虽然网上有很多学习平假名的资源，但为了指南的完整性，这里提供一个填空练习。表中已去掉废弃的假名，建议同时使用纸笔进行练习。 平假名表\nn w r y m h n t s k a ん わ ら や ま は な た さ か あ り み ひ に ち し き い る ゆ む ふ ぬ つ す く う れ め へ ね て せ け え を ろ よ も ほ の と そ こ お 平假名书写练习\n本练习用于练习书写日语单词。为避免歧义，每个假名之间添加分隔线。\n不要去研究罗马字符的拼写，这仅仅是为了测试你的听觉记忆力。\n练习一\nたべもの ＝ ta | be | mo | no くるま ＝ ku | ru | ma あした ＝ a | shi | ta こくせき ＝ ko | ku | se | ki おすし ＝ o | su | shi たべる ＝ ta | be | ru わからない ＝ wa | ka | ra | na | i さずける ＝ sa | zu | ke | ru りくつ ＝ ri | ku | tsu たちよみ ＝ ta | chi | yo | mi ものまね ＝ mo | no | ma | ne ひがえり ＝ hi | ga | e | ri ぽんず ＝ pon | zu ひるめし ＝ hi | ru | me | shi れきし ＝ re | ki | shi ふゆかい ＝ fu | yu | ka | i 练习二\n书写带有小「や」、「ゆ」、「よ」 、的平假名，以及长元音。\n回答该用哪个假名来拉长发音。\nじゅぎょう ＝ jyu | gyo－\nぬるいおちゃ ＝ nu | ru | i | o | cha\nきゅうきょく ＝ kyu－ | kyo | ku\nうんようじょうほう ＝ un | yo－ | jyo－ | ho－\nびょうどう ＝ byo－ | do－\nじょうとうしゅだん ＝ jyo－ | to－ | shu | dan\nぎゅうにゅう ＝ gyu－ | nyu－\nしょうりゃく ＝ sho－ | rya | ku\nひゃくねんはやい ＝ hya | ku | nen | ha | ya | i\nそつぎょうしき ＝ so | tsu | gyo－ | shi | ki\nとうにょうびょう ＝ to－ | nyo－ | byo－\nむりょう ＝ mu | ryo－\nみょうじ ＝ myo－ | ji\nおかあさん ＝ o | ka－ | san\nろうにん ＝ ro－ | nin\nりゅうがくせい ＝ ryu－ | ga | ku | se | i\n平假名阅读练习\n练习日语单词的阅读，特别注意小「つ」的发音。\n记住不要太纠结罗马字母的拼写，练习的目的是测试你是否记住了发音。\n阅读练习\nきゃっかんてき ＝ kyakkanteki はっぴょうけっか ＝ happyoukekka ちょっかん ＝ chokkan ひっし ＝ hisshi ぜったい ＝ zettai けっちゃく ＝ kecchaku しっぱい ＝ shippai ちゅうとはんぱ ＝ chuutohanpa やっかい ＝ yakkai しょっちゅう ＝ shotchuu ◇片假名（カタカナ） 概述\n片假名主要用于： 外来语（如：コンピュータ - computer） 强调（类似英文斜体） 拟声词（如：ドキドキ - 心跳加速） 特殊用途（如生物学名称、公司品牌等） 片假名的发音与对应的平假名完全相同，仅书写方式不同。外来语必须适应日语的 [辅音 + 元音] 结构，可能导致发音与原语言不同。例如，英语单词 \u0026ldquo;coffee\u0026rdquo; 在日语中写作「コーヒー」（kōhī）。\n学习片假名时，需摒弃原单词的英语发音，以日语方式记忆，否则可能导致日本人听不懂。\n片假名表\nn w r y m h n t s k a 行 ン (n) ワ ラ ヤ マ ハ ナ タ サ カ ア ヰ* リ ミ ヒ ニ チ (chi) シ (shi) キ イ ル ユ ム フ (fu) ヌ ツ (tsu) ス ク ウ ヱ* レ メ ヘ ネ テ セ ケ エ ヲ* ロ ヨ モ ホ ノ ト ソ コ オ * 不再使用或罕用。 书写与识别\n发音与平假名相同，但书写方式不同。 「ヲ」仅作助词使用，现代日语几乎不使用，可忽略。 易混淆片假名： 「シ」「ン」「ツ」「ソ」：前两者偏竖，后两者偏横。 「ノ」「メ」「ヌ」，「フ」「ワ」「ウ」 也容易混淆。 解决方法： 注意笔顺 可使用 Katakana trace sheets 练习。 分隔符「・」：用于分隔复合外来语，如「ロック・アンド・ロール」（rock and roll）。 长元音（ー）\n片假名的长元音用「ー」表示，无需额外假名。 示例： ツアー (tsua-) → tour（游览） メール (me-ru) → email（电子邮件） ケーキ (ke-ki) → cake（蛋糕） 小号假名与额外发音\n日语缺少某些外来音节，因此采用小号「ア、イ、ウ、エ、オ」： v w f ch d t j sh ヴァ ワ ファ チャ ダ タ ジャ シャ (a) ヴィ ウィ フィ チ ディ ティ ジ シ (i) ヴ ウ フ チュ ドゥ トゥ ジュ シュ (u) ヴェ ウェ フェ チェ デ テ ジェ シェ (e) ヴォ ウォ フォ チョ ド ト ジョ ショ (o) 注意： /wu/ 音不存在，如 \u0026ldquo;woman\u0026rdquo; 写作「ウーマン」。 /tu/ 音虽写作「トゥ」，但老词仍用「ツ」，如「ツール」（tool）。 早期外来语替代规则： building 旧写作「ビルヂング」，现代写作「ビルディング」。 片假名例词\n英语 片假名 America アメリカ Russia ロシア cheating カンニング (cunning) tour ツアー company employee サラリーマン (salary man) Mozart モーツァルト car horn クラクション (klaxon) sofa ソファ / ソファー Halloween ハロウィーン French fries フライドポテト (fried potato) ◇片假名练习 本练习旨在帮助学习者熟悉片假名的书写、发音及其在外来语中的应用。\n片假名记忆测试\nn w r y m h n t s k a 行 ン ワ ラ ヤ マ ハ ナ タ サ カ ア リ ミ ヒ ニ チ シ キ イ ル ユ ム フ ヌ ツ ス ク ウ レ メ ヘ ネ テ セ ケ エ ロ ヨ モ ホ ノ ト ソ コ オ 片假名书写练习\n本练习旨在帮助学习者正确书写片假名单词，并熟悉外来语在日语中的发音规律。\n片假名书写练习一（基础词汇）\n罗马音 片假名 含义 ta be mo no タベモノ 食物 pan パン 面包 kon pyu－ ta コンピュータ 计算机 myu－ ji ka ru ミュージカル 音乐剧 u－ man ウーマン 女人 he a pi－ su ヘアピース 假发 nu－ do ヌード 裸体 me nyu－ メニュー 菜单 ro－ te－ shon ローテーション 轮换 ha i kin gu ハイキング 远足 kyan se ru キャンセル 取消 ha ne mu－n ハネムーン 蜜月 ku ri su ma su tsu ri－ クリスマスツリー 圣诞树 ra i to ライト 灯光 na i to ge－ mu ナイトゲーム 夜间比赛 片假名书写练习二（特殊发音）\n此部分涵盖日语中较难书写的片假名单词，包括不规则发音的外来语。\n片假名单词表\n罗马音 片假名 含义 e i zu wi ru su エイズウイルス 艾滋病毒 no－ su sai do ノースサイド 北侧 in fo me－ shon インフォメーション 信息 pu ro ji e ku to プロジェクト 项目 fa su to fu－ do ファストフード 快餐 she ru su ku ri pu to シェルスクリプト Shell 脚本 we－ to re su ウェートレス 女服务员 ma i ho－ mu マイホーム 我的家 chi－ mu wa－ ku チームワーク 团队合作 mi ni su ka－ to ミニスカート 迷你裙 re－ za－ di su ku レーザーディスク 激光唱片 chen ji チェンジ 变更 re gyu ra－ レギュラー 常规 we i to ri fu tin gu ウェイトリフティング 举重 片假名拼写规则\n在将英语单词转换为片假名时，需要遵循以下规则： L/R 无区分：日语不区分 L 和 R，均用「ラ行」表示。 Ready → レディ Lady → レディ 长元音的表示：连续元音或以 /r/ 结尾的单词通常会变成长音（ー）。 Target → ターゲット Shoot → シュート 促音（小ッ）：用于表示去声的 /t/ 或 /c/ 结尾。 Catch → キャッチ Cache → キャッシュ 辅音结尾的补充元音：日语以元音结尾（\u0026ldquo;n\u0026rdquo; 和 \u0026ldquo;m\u0026rdquo; 除外，因为我们有「ン」），对于 \u0026ldquo;t\u0026rdquo; 和 \u0026ldquo;d\u0026rdquo; ，通常用 \u0026ldquo;o\u0026rdquo; 补充；其他基本上用 \u0026ldquo;u\u0026rdquo;： Good → グッド Top → トップ Jack → ジャック 英语到片假名转换练习\n本练习涵盖常见的外来语转换。\n例：Europe ＝ ヨーロッパ 英文 片假名 含义 check チェック 检查 violin バイオリン 小提琴 jet coaster (roller coaster) ジェットコースター 过山车 window shopping ウィンドーショッピング 逛街 salsa サルサ 萨尔萨舞 hotdog ホットドッグ 热狗 suitcase スーツケース 行李箱 kitchen キッチン 厨房 restaurant レストラン 餐厅 New York ニューヨーク 纽约 ◇汉字 什么是汉字？\n在日语中，名词、形容词词干和动词基本都是用中文字符书写的，这些字符称为汉字。副词通常也是用汉字书写，因此，想要阅读日语书面语，必须掌握汉字（幼儿读物以及给不懂汉字的人看的材料除外）。但并非所有单词都使用汉字，例如动词 \u0026ldquo;to do\u0026rdquo;（する）通常用平假名书写。 本指南从一开始就使用汉字，目的是让你尽快熟悉真正的日语。我们会先介绍汉字的基本特点，再讨论高效学习的方法。掌握汉字并不容易，但也不是不可能。关键在于正确的方法和长期的记忆策略。 学习汉字的方法\n学习汉字所需的资源可以在网上找到，例如： Jim Breen\u0026rsquo;s WWWJDIC Jisho.org 这两个网站提供大部分汉字的笔顺，对于初学者，重复书写是记忆笔顺的好方法。写汉字时要注意整体的平衡感，避免头重脚轻。通过不断练习，你会培养出笔顺的直觉，从而减少对范本的依赖。 阅读汉字的规则\n音读（おんよみ）与训读（くんよみ）\n基本上，每个汉字都有两种读法：\n音读（おんよみ）：来自中文的读法，主要用于复合词（熟語）。\n训读（くんよみ）：日语固有的读法，通常用于单独出现的汉字。\n例如：\n汉字 训读 音读 例词 力 ちから りょく 能力（のうりょく） 某些汉字可能有多个音读或训读，例如「怪力」（かいりき）中的「力」读作「りき」，而非「りょく」。\n送假名（送り仮名）\n在动词和形容词中，汉字后通常会跟着平假名，这些假名称为送假名。例如：\n动词：「食べる」（たべる，吃）→「食べた」（たべた，吃了） 形容词：「新しい」（あたらしい，新） 送假名的作用：\n区分不同词性（自动词与他动词）。 帮助表示词形变化（时态、语态等）。 读音变化（音变）\n汉字在复合词中可能会发生音变，使发音更加流畅。例如：\n/h/ → /b/ 或 /p/： 一本（いっぽん） 徹底（てってい） 「つ」变为「っ」： 格好（かっこう） 近义汉字的区别\n一些意义相近的汉字，在不同的语境下表达细微差异。例如：\n「听」的不同表达\n聞く（きく）：一般的“听”或“问”。 聴く（きく）：专指“用心听”，如听音乐会。 訊く（きく）：仅指“询问”。 「看」的不同表达\n見る（みる）：普通的“看”。 観る（みる）：观看演出、电影。 「写」和「画」的不同\n書く（かく）：写字。 描く（かく）：画画。 描く（えがく）：描绘（抽象场景）。 々——重复符号\n日语中存在一个特殊的符号「々」，用于表示重复前面的汉字，例如：\n時時 → 時々（ときどき） 様様 → 様々（さまざま） 色色 → 色々（いろいろ） 一一 → 一々（いちいち） 为什么要用汉字？\n有些人认为日语使用三种文字（汉字、平假名、片假名）过于复杂，但实际上，汉字有助于提高阅读效率。\n解决同音词歧义\n日语的发音数量有限，导致同音词极多。例如「きかん」（kikan）可能有以下多种含义：\n機関（きかん）：机关 期間（きかん）：期间 帰還（きかん）：归还 基幹（きかん）：基础 如果不用汉字，仅靠假名书写，阅读时很难分辨含义。\n增强视觉辨识度\n相比完全平假名书写的句子，使用汉字的文本更易于快速理解。例如：\n假名书写：\nわたしはきのうともだちとえいがをみました。\n汉字混合：\n私は昨日友達と映画を見ました。\n使用汉字后，句子中的关键词可以快速被识别，减少阅读时的认知负担。\n避免空格问题\n韩语使用的是字母系统，因此需要空格来分隔单词，而日语使用汉字后，文本的可读性大大提高，无需额外的空格。例如：\n韩语：\n나는 어제 친구와 영화를 보았다。\n日语：\n私は昨日友達と映画を見ました。\n汉字本身就提供了足够的视觉分隔，省去了空格带来的问题。\n★基本语法 在学会如何书写日语之后，我们可以开始学习日语的基本语法结构。本章节主要涵盖以下内容：\n名词 形容词 动词 副词 此外，我们还将介绍如何使用助词将各个部分组合成连贯的句子。学完本章节，你将掌握基本的句型结构。\n编号 主题 内容摘要 1 状态表示 い形容词、な形容词、动词可用于描述状态 2 助词介绍 は（主题）、が（主语）、を（宾语）等 3 形容词 い形容词、な形容词及其变形规则 4 动词基础 一类（五段）、二类（上下段）、三类（不规则） 5 动词的否定式 一类「う→あ+ない」、二类「去る+ない」、三类特殊变形 6 过去形 一类（变化复杂）、二类（去る+た）、三类（する→した） 7 与动词搭配的助词 を（对象）、に（目标）、で（地点） 8 他动词与自动词 他动词需宾语、自动词动作自行发生 9 关系从句与语序 关系从句前置，主宾动语序 10 名词相关助词 の（所属）、と（并列） 11 副词与结束句助词 副词（程度、方式）、ね（确认）、よ（强调） ◇状态表示 用「だ」表示某物的状态\n单词学习\n人【ひと】 - 人\n学生【がく・せい】 - 学生\n元気【げん・き】 - 健康、有活力 用于问候对方身体是否安好\n日语中没有类似英语 \u0026ldquo;to be\u0026rdquo; 的状态动词，但可以在名词或な形容词后加「だ」来表示状态。（な形容词将在形容词章节详细介绍）\n规则：名词/な形容词 + だ\n例：人＋だ → 人だ\n示例\n人だ。 （是人。） 学生だ。 （是学生。） 元気だ。 （是很好。） 省略「だ」\n在口语中，表示状态时可以省略「だ」。同样要注意到，因为从上下文很容易推断，所以主语都省略了：\nＡ：元気？ （你好吗？）\nＢ：元気。 （我很好。）\n什么时候用「だ」？\n用「だ」语气更重，更像是正式陈述，男性在口语中更常使用。\n某些语法结构必须使用「だ」来明确状态，但暂时不必担心这些细节。\n否定状态的活用\n单词学习\n学生【がく・せい】 - 学生\n友達【とも・だち】 - 朋友\n元気【げん・き】 - 健康、有活力 用于问候对方身体是否安好\n日语的否定式和过去式是通过活用来表达的，而不是简单地加「だ」。\n表示否定状态\n规则：名词/な形容词 + じゃない\n例：学生＋じゃない → 学生じゃない\n示例\n学生じゃない。 （不是学生。） 友達じゃない。 （不是朋友。） 元気じゃない。 （不好。） 表示过去状态的活用形\n单词学习\n学生【がく・せい】 - 学生\n友達【とも・だち】 - 朋友\n元気【げん・き】 - 健康、有活力 用于问候对方身体是否安好\n表示过去状态\n规则：名词/な形容词 + だった（曾经是）\n例：友達＋だった → 友達だった\n示例\n学生だった。 （以前是学生。） 友達だった。 （以前是朋友。） 元気だった。 （以前很好。） 否定过去状态\n规则：名词/な形容词 + じゃなかった（曾经不是） 步骤：\n先变成否定形：「じゃない」 把「じゃない」的「い」改成「かった」 例：友達じゃない → 友達じゃなかった\n示例\n友達じゃなかった。 （以前不是朋友。） 学生じゃなかった。 （以前不是学生。） 元気じゃなかった。 （曾经不好。） 活用总结表\n这就是状态的四种表达方式！\n肯定 否定 非过去 学生（だ） 学生じゃない 是学生 不是学生 过去 学生だった 学生じゃなかった 以前是学生 以前不是学生 接下来可以学习如何使用助词来进一步修饰这些状态。\n◇状态表示练习 本节所要用到的词汇\n汉字\n以下是本节涉及的汉字，建议在单词中学习汉字：\n人 - 人 子 - 孩子 小 - 小 中 - 中间 大 - 大 友 - 朋友 生 - 生活 先 - 先 学 - 学习 校 - 学校 高 - 高 車 - 车 供 - 陪伴 達 - 达到 单词学习\n以下是练习中会用到的单词：\n口语表达\nうん - 是（口语）\nううん - 不是（口语）\n指示词\nこれ - 这\nそれ - 那\nあれ - 那（远处的）\nこう - 这样\nそう - 那样\n名词\n人（ひと） - 人\n大人（おとな） - 成人\n子供（こども） - 孩子\n友達（ともだち） - 朋友\n車（くるま） - 车\n学生（がくせい） - 学生\n先生（せんせい） - 老师\n学校（がっこう） - 学校\n小学校（しょうがっこう） - 小学\n中学校（ちゅうがっこう） - 中学\n高校（こうこう） - 高中\n大学（だいがく） - 大学\n活用练习一\n将以下名词依次活用成 陈述形、否定式、过去形、过去否定式。\n例：\n人 → 人だ / 人じゃない / 人だった / 人じゃなかった\n单词 陈述 否定 过去 过去否定 これ これだ これじゃない これだった これじゃなかった 大人 大人だ 大人じゃない 大人だった 大人じゃなかった 学校 学校だ 学校じゃない 学校だった 学校じゃなかった 友達 友達だ 友達じゃない 友達だった 友達じゃなかった 学生 学生だ 学生じゃない 学生だった 学生じゃなかった 活用练习二 将以下句子翻译成日语，显式地写出活用形式。\n是大学。 → 大学だ。 不是高中。 → 高校じゃない。 以前是老师。 → 先生だった。 是大人。 → 大人だ。 以前不是小孩。 → 子供じゃなかった。 以前是这样。 → こうだった。 以前不是那个。 → あれじゃなかった。 不是中学。 → 中学校じゃない。 是朋友。 → 友達だ。 以前不是车。 → 車じゃなかった。 以前是这个。 → これだった。 不是那样的。 → そうじゃない。 回答问题练习\n用「うん」或「ううん」回答，并补充完整句子。男性使用「だ」，女性省略。\n例：\nQ）学生？\nA）ううん、学生じゃない。\n问题 回答 Q1）友達？ A1）うん、友達。（女） Q2）学校？ A2）ううん、学校じゃない。 Q3）それだった？ A3）ううん、それじゃなかった。 Q4）そう？（是吗？） A4）うん、そうだ。（男） Q5）これ？ A5）ううん、それじゃない。（物体远离回答者） Q6）先生だった？ A6）うん、先生だった。 Q7）小学校だった？ A7）ううん、小学校じゃなかった。 Q8）子供？ A8）うん、子供。（女） 复习重点\n✅ 状态的四种活用\n时态 肯定 否定 非过去 学生（だ） 学生じゃない 过去 学生だった 学生じゃなかった ✅ 重点总结：\n「だ」 只能加在 名词 和 な形容词 后面，表示状态。 口语中可以省略「だ」，但在某些语法结构中必须显式使用。 「じゃない」 用于否定当前状态。 「だった」 表示过去状态，「じゃなかった」 表示过去否定状态。 男性在口语中更常使用「だ」，女性较少使用。 回答问题时，口语表达中主语可以省略，但要根据上下文推断句意。 ◇助词介绍 用助词来定义语法功能 助词是日语中用于定义单词在句子中语法功能的平假名。它们非常重要，因为改变助词可能会改变整个句子的意思。例如，改变一个助词就可以把「吃鱼」变成「鱼吃」。\n表主题的助词「は」 单词学习\n学生（がく・せい） - 学生\nうん - 是（口语）\n明日（あした） - 明天\nううん - 不是（口语）\n今日（きょう） - 今天\n試験（しけん） - 考试\n「は」用于指明句子的主题。比如一个人说「不是学生」，这在日语里是完全没问题的，但却看不出来说话的人指的是什么。主题语助词可以让我们表明句子在谈论什么，它就是「は」。当且仅当作为主题助词时，「は」读作 / wa /。\n例一\nボブ：アリスは学生？ Bob：（你）Alice 是学生吗？ アリス：うん、学生。 Alice：对，（我）是。 Bob 的问题是关于 Alice 的，因此 Alice 在回答时可以省略主题。\n例二\nボブ：ジョンは明日？ Bob：John 是明天吗？ アリス：ううん、明日じゃない。 Alice：不，不是明天。 需要补充语境，比如他俩可能在谈论 John 何时考试。\n例三\nアリス：今日は試験だ。 Alice：今天是考试。 ボブ：ジョンは？ Bob：那 John 呢？ アリス：ジョンは明日。 Alice：John 是明天。（对 John 来说，考试是明天。） 此处主题「は」涵盖的范围较广，可以省略具体名词。主题可以指向任何地点的任何动作或对象，甚至可以包含其他句子。\n包含主题助词「も」 单词学习\n学生（がく・せい） - 学生\nうん - 是（口语）\nでも - 但是\nううん - 不是（口语）\n「も」相当于「也」，可以在当前主题的基础上引入新的主题。\n例一\nボブ：アリスは学生？ Bob：（你）Alice 是学生吗？ アリス：うん、トムも学生。 Alice：是，Tom 也是学生。 使用「も」要保持句子逻辑一致，例如「我是学生，Tom 也不是学生。」是不自然的。这种情况下，可以用「は」新开一个主题，如例二。\n例二\nボブ：アリスは学生？ Bob：（你）Alice 是学生吗？ アリス：うん、でもトムは学生じゃない。 Alice：是，但 Tom 不是学生。 例三（否定的包含）\nボブ：アリスは学生？ Bob：（你）Alice 是学生吗？ アリス：ううん、トムも学生じゃない。 Alice：不是，Tom 也不是学生。 识别助词「が」 单词学习\n誰（だれ） - 谁\n学生（がく・せい） - 学生\n私（わたし） - 我，我自己\n现在我们会用「は」和「も」建立话题了，但如果我们不知道话题是什么呢？如果我想问「那个学生是谁？」，那我就需要识别一个对象（identifier），因为我不知道那个学生是谁。如果我仍然使用话题助词，问题就变成了「谁是学生吗？」，这样就很奇怪，因为「谁」不是一个实际的人。\n「が」用于标识特定的对象或属性，被称为识别助词。\n例一\nボブ：誰が学生？ Bob：是学生的那个人是谁？ アリス：ジョンが学生。 Alice：John 是那个是学生的人。 「が」用于明确「学生」的具体人选。\n例二\n誰が学生？ 是学生的那个人是谁？ 学生は誰？ （那个）学生是谁？ 第一个句子用「が」表示想要在人群中识别出一个学生，第二个句子用「は」只是在谈论学生。\n第一个句子里的「が」不能换成「は」，否则「谁」就成了主题，而句子意思就成了「谁是一个学生吗？」\n例三\n私は学生。 我（是）学生。 私が学生。 我（是）学生。（强调「我是那个学生」） 「は」用来引入话题，而「が」强调识别。\n第一句里面「私」是主题，所以含义是「至于我呢，我是一个学生」。\n但第二句的意思是想说明那个「学生」是谁。如果我们想知道那个学生是谁，助词「が」告诉了我们是「私」。\n我经常把主题助词翻译成「对于，至于」（as for; about），把识别助词翻译成「那个」（the one; the thing）以示区别。\n语义区分 私は学生。 至于我呢，（我是）学生。 私が学生。 我（是）那个人（那是个）学生。 助词「が」通常用于回答「那个学生是谁？」\n如果你按照我的方法来思考就会发现，助词「は」和「が」其实很不一样。助词「が」用来识别某物或某人的属性，而助词「は」只是用来带出一个新的话题。所以在长句子里，人们经常会用逗号来将主题隔开，以免产生歧义，不知道句子的哪个部分是主题。\n总结 「は」：表示主题，强调正在谈论的对象。 「も」：表示「也」，在已有主题基础上添加新信息。 「が」：用于识别或强调某个对象或属性。 ◇助词练习 本章节用到的词汇\n汉字\n以下是新单词里涉及的汉字。如果对笔顺不熟悉，建议查字典。我建议在单词中学习汉字（例如后面的词汇）。\n汉字 含义 何 什么 映 投影 画 图画 彼 他 女 女性 昨 之前的 日 日 今 现在 明 明亮 知 知道 合 匹配 鉛 铅 筆 画笔 入 进入 口 口 出 出口 図 计划 書 写 館 建筑物 水 水 单词学习\n下面是后面练习中会用到的简单名词：\n日语 读音 含义 どこ doko 哪里 いつ itsu 何时 どうして doushite 为什么 どう dou 如何 どれ dore 哪个 ミーティング miitingu 会议 ボールペン boorupen 圆珠笔 何【なに】 nani 什么 誰【だれ】 dare 谁 映画【えいが】 eiga 电影 彼【かれ】 kare 他；男朋友 彼女【かのじょ】 kanojo 她；女朋友 雨【あめ】 ame 雨 水【みず】 mizu 水 昨日【きのう】 kinou 昨天 今日【きょう】 kyou 今天 明日【あした】 ashita 明天 知り合い【しりあい】 shiriai 熟人 鉛筆【えんぴつ】 enpitsu 铅笔 仕事【しごと】 shigoto 工作 入口【いりぐち】 iriguchi 入口 出口【でぐち】 deguchi 出口 図書館【としょかん】 toshokan 图书馆 用「は」做基本练习\n我们先复习一下助词的基本概念。「は」作为主题助词，表示句子的主题，发音为 / wa /。\n例：谁？ （主题：アリス） → アリスは誰？ （Alice是谁？）\nどこ？（主题：学校） → 学校はどこ？（学校在哪里？）\nどうして？（主题：それ） → それはどうして？（为什么会那样？）\nいつ？（主题：ミーティング） → ミーティングはいつ？（会议是什么时候？）\n何？（主题：これ） → これは何？（这是什么？）\nどう？（主题：映画） → 映画はどう？（电影如何？）\n中学生だ。（主题：彼） → 彼は中学生だ。（他是中学生。）\n先生だ。（主题：彼女） → 彼女は先生だ。（她是老师。）\n雨。（主题：今日） → 今日は雨。（今天下雨。）\n友達。（主题：ボブ） → ボブは友達。（Bob 是朋友。）\n知り合い？（主题：彼） → 彼は知り合い？（他是熟人吗？）\n用「は」和「も」练习\n现在我们来练习 「は」 和 「も」 之间的区别。「も」表示“也”，表示某个内容与前面内容类似。\n例：これは鉛筆だ。それも鉛筆だ。（这是一支铅笔，那支也是铅笔。）\n今日は雨だ。昨日＿雨だった。 → 昨日も雨だった。\nジムは大学生だ。でも、私＿大学生じゃない。 → 私は大学生じゃない。\nこれは水。これ＿そう。 → これもそう。\nこれはボールペンだ。でも、それ＿ボールペンじゃない。 → それはボールペンじゃない。\n仕事は明日。今日＿仕事じゃなかった。 → 今日は仕事じゃなかった。\nここは入口。出口＿ここだ。 → 出口もここだ。\n「は」、「も」和「が」的综合练习\n在不同的场景下选择合适的助词。「が」用于强调特定的信息。\n对话 1\nジム） アリスは誰？ ボブ） 友達だ。彼女がアリスだ。 （Jim：Alice是谁？ Bob：是朋友。她就是 Alice。） 对话 2\nアリス） これは何？ ボブ） それは鉛筆。 アリス） あれも鉛筆？ ボブ） あれはペンだ。 （Alice：这是什么？ Bob：那是一支铅笔。 Alice：那支也是铅笔吗？ Bob：那是一支钢笔。） 对话 3\nアリス） 図書館はどこ？ ボブ） ここが図書館だ。 アリス） そこは図書館じゃない？ ボブ） そこじゃない。図書館はここだ。 （Alice：图书馆在哪里？ Bob：这里就是图书馆。 Alice：那里不是图书馆吗？ Bob：不是那里，图书馆在这里。） ◇形容词 形容词的属性\n日语的形容词分为 な形容词 和 い形容词。\nな形容词 类似于名词，修饰名词时需加「な」。 い形容词 以「い」结尾，直接修饰名词。 な形容词\n单词学习 静か 【しず・か】 （な形容词） - 安静 人 【ひと】 - 人 きれい （な形容词） - 漂亮；干净 友達 【とも・だち】 - 朋友 親切 【しん・せつ】 （な形容词） - 和善 魚 【さかな】 - 鱼 好き 【す・き】 （な形容词） - 招人喜欢的 肉 【にく】 - 肉 野菜 【や・さい】 - 蔬菜 な形容词的用法 修饰名词（需加「な」）： 静かな人。（安静的人） きれいな人。（漂亮的人） 句中作表语（类似名词）： 友達は親切。（朋友是和善的。） 友達は親切な人だ。（朋友是和善的人。） 与助词「が」连用（表达喜欢）： ボブは魚が好きだ。（Bob 喜欢鱼。） ボブは魚が好きじゃない。(Bob 不喜欢鱼。) ボブは魚が好きだった。（Bob 以前喜欢鱼。） ボブは魚が好きじゃなかった。（Bob 以前不喜欢鱼。） 从上例看到主题助词和识别助词合用的情形。句子的主题是 \u0026#34;Bob\u0026#34;，而「鱼」标识了 Bob 喜欢的对象。 修饰名词句（从句形式）： 魚が好きな人。（喜欢鱼的人） 魚が好きじゃない人。(不喜欢鱼的人。) 魚が好きだった人。(以前喜欢鱼的人。) 魚が好きじゃなかった人。(以前不喜欢鱼的人。) 我们也可以把整个被形容词修饰过的名词从句当作一个单独的名词来看待。比如我们可以把整个从句当作句子的主题，如下所示。 魚が好きじゃない人は、肉が好きだ。(不喜欢鱼的人喜欢肉。) 魚が好きな人は、野菜も好きだ。(喜欢鱼的人也喜欢蔬菜。) い形容词\n单词学习\n嫌い 【きら・い】 （な形容词） - 令人不快的；可恶的 食べ物 【た・べ・もの】 - 食物 おいしい （い形容词） - 可口 高い 【たか・い】 （い形容词） - 高；贵 ビル - 楼 値段 【ね・だん】 - 价格 レストラン - 餐馆 あまり／あんまり - 不是非常（与否定式连用） 好き 【す・き】 （な形容词） - 招人喜欢的 いい （い形容词） - 好 い形容词的用法\n修饰名词（直接使用）： 高いビル。（高的楼） 句中作表语（不能加「だ」）： 値段が高い。（价格高。） 修饰名词句： 値段が高いレストランは好きじゃない。（不喜欢价格高的餐馆。） い形容词的活用\n形态 变化规则 例句 含义 肯定 - 高いビル。 高的楼。 否定 去掉「い」+「くない」 高くないビル。 不高的楼。 过去 去掉「い」+「かった」 高かったビル。 曾经高的楼。 过去否定 否定形去掉「い」+「かった」 高くなかったビル。 曾经不高的楼。 特殊い形容词\n「いい」的原形是「よい」，活用时需按「よい」变化。\n活用表\n形态 いい かっこいい 肯定 いい かっこいい 否定 よくない かっこよくない 过去 よかった かっこよかった 过去否定 よくなかった かっこよくなかった 例句\n値段があまりよくない。（价格不是很好。） 彼はかっこよかった！（他看起来真酷！） ◇形容词练习 本章节用到的词汇\n汉字\n面 - 面罩；脸 白 - 白色 有 - 存在 名 - 名字 嫌 - 厌恶 好 - 喜欢 静 - 安静 楽 - 音乐；安慰 切 - 切 辛 - 辣；苦 料 - 材料 理 - 道理 词汇表\n以下是练习中可能用到的简单形容词（以及一个名词）：\n日语 读音 释义 きれい 好看；整齐 いい 好 かっこいい 酷；好看 面白い おもしろい 有趣 有名 ゆうめい 著名 嫌い きらい 不喜欢；厌恶 好き すき 喜欢 大きい おおきい 大的 小さい ちいさい 小的 静か しずか 安静的 高い たかい 高；贵 楽しい たのしい 有趣的 大切 たいせつ 重要的 辛い からい 辣 料理 りょうり 菜肴（名词） 形容词活用练习\n现在按顺序练习活用，请将每个形容词转换为以下形式：\n陈述形（如适用） 否定式 过去形 过去否定式 注意： い形容词的陈述形无需变化，而な形容词后面要加「だ」。如果某项无需变化，请填写 n/a。\n原形 陈述形 否定式 过去形 过去否定式 面白い n/a 面白くない 面白かった 面白くなかった 有名 有名だ 有名じゃない 有名だった 有名じゃなかった 嫌い 嫌いだ 嫌いじゃない 嫌いだった 嫌いじゃなかった 好き 好きだ 好きじゃない 好きだった 好きじゃなかった 大きい n/a 大きくない 大きかった 大きくなかった きれい きれいだ きれいじゃない きれいだった きれいじゃなかった 小さい n/a 小さくない 小さかった 小さくなかった いい n/a よくない よかった よくなかった 静か 静かだ 静かじゃない 静かだった 静かじゃなかった 高い n/a 高くない 高かった 高くなかった かっこいい n/a かっこよくない かっこよかった かっこよくなかった 楽しい n/a 楽しくない 楽しかった 楽しくなかった 大切 大切だ 大切じゃない 大切だった 大切じゃなかった 用合适的形容词或助词填空\n示例：\nQ）　学生？\nA）　ううん、学生じゃない。\nジム： アリス、今は忙しい？\nアリス： ううん、忙しくない。\nアリス： 何が楽しい？\nボブ： ゲームが楽しい。\nアリス： 大切な人は誰？\nボブ： ジムが大切だ。\nアリス： 辛い料理は、好き？\nボブ： ううん、辛くない料理が好きだ。\nアリス： ジムは、かっこいい人？\nボブ： ううん、かっこよくない。\nアリス： ボブは、有名な人？\nボブ： ううん、有名じゃない。\nアリス： 昨日のテストは、よかった？\nボブ： ううん、よくなかった。\n◇动词基础 ◇动词练习 ◇动词的否定式 ◇动词否定活用练习 ◇过去形 ◇动词过去形练习 ◇与动词一起使用的助词（を、に、へ、で） ◇他动词和自动词 ◇关系从句和语序 ◇与名词相关的助词（と、や、とか、の） ◇副词和用于结束句子的助词 ★语法精要 ","permalink":"https://yuuniji.us.kg/posts/japanese-grammar/","summary":"\u003ch2 id=\"传统教科书的问题\"\u003e★传统教科书的问题\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e核心问题\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e传统教科书的目标：快速教授实用且礼貌的日语，但忽略了语言的真正逻辑。\u003c/li\u003e\n\u003cli\u003e主要问题：\n\u003cul\u003e\n\u003cli\u003e以英语的思维方式教授日语，导致无法真正理解日语的表达方式。\u003c/li\u003e\n\u003cli\u003e试图翻译英语短语，而不是教授日语的语法体系。\u003c/li\u003e\n\u003cli\u003e忽略汉字学习，导致学习者在实际应用时完全无法阅读和理解日语文本。\u003c/li\u003e\n\u003cli\u003e过早教授敬语，却没有打好基础，导致学习者困惑。\u003c/li\u003e\n\u003cli\u003e强调完整句子表达（如 \u003ccode\u003e\u0026quot;Hi, my name is Smith\u0026quot;\u003c/code\u003e），但日语中很多信息是通过语境省略的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e解决方案：用日语的思维学日语\u003c/p\u003e","title":"日语语法指南"},{"content":"日语学习入门：高效方法 一、找一本教材（推荐《大家的日本语》（みんなの日本語） 推荐理由： 日本人编写的教材，错误是日本人常犯的错误，不会影响在日本人眼中的日语水平。 选择适合自己的教材，关键是能学进去，而不是内容多么完美。 教材结构： 本册（全日语） 指导用书（含单词表、中文说明等） 二、准备复读机或复读软件 功能要求： 可设置复读位置。 具备对录音分解记忆功能更佳。 三、课前准备 1. 不看课文，先看课后单词和语法说明 如果使用《大家的日本语》，仅查看指导用书，不看本册内容。指导用书中的课文翻译部分也先跳过。 2. 先背单词和语法 听录音背单词 初次记忆\n一边听录音一边看单词和解释，尽量记住几个单词。不要有压力，逐步熟悉单词的读音、字形、变形（动词）和意思。 方法\n遮住书本内容，仅听录音回忆单词并写下，同时回忆意思。 对听不出或写错的单词单独列一个表，重新背诵。 重复上述过程，直到所有单词能正确听写并回忆意思。 上述都没问题后，看意思回想日语单词，并大声读出来。为了提高口语，你也可以在第一步里一边听一边大声朗读。 提高效率的技巧\n熟练的单词逐步减少书写。 能在录音正常播放速度下快速回忆单词的读音、写法和意思。 增强记忆与抗遗忘 心态 遗忘是正常的，不必沮丧。忘记时不要失去信心，反而是好事，说明需要巩固。 复习策略 每周末听写本周所有单词，快速（一秒以内）回忆意思。 遇到遗忘的单词，单独拿出来列一个单词表，下周复习时将这部分单词与下周新学的单词一起复习。 复习两次都没问题的，就可以从这个记不住的表里去掉了。 除此之外，在后面步骤中如果发现因为单词的遗忘引起的听写问题，也随时将单词加入这个遗忘单词表，并用上面的方法进行复习。 总之这个遗忘单词表维护好了可以很大程度提高背单词的效率。 四、单词和语法都没问题后，听写课文 1. 课文准备 不打开教材的课文部分，仅通过录音听写课文。 2. 听写方法 首次听写 第一次不要停顿，连续听完一句或一段。可能出现以下情况： 大意能听懂，细节不清楚。 部分能听懂，某些地方总是听不出来。 完全听不懂。 解决方案 情况 1 根据自己理解的大意和掌握的单词和语法重新造句，把句子造好之后，再听录音去检查自己造句造的对不对。 对有疑惑部分反复听或减速听，直到改正。 情况 2 先把能听懂的部分写出来，对听不懂部分多次听，必要时减速听。 这时候可能听不懂，但是大概知道是什么音，那就试着根据音写出假名，帮助记忆发音。 想不起来也可以提高听假名的准确度。经常看到有些字幕组翻译的字幕出错，就是因为听假名的精确度不够高产生的误听错误。 情况 3 只能继续反复听，直至转化为情况 1 或情况 2。 上面提到的“反复听”如果对同一个东西听了不到50次，建议不要放弃，继续坚持。 3. 对照教材检查 这一步很重要，话说三分在写七分在改 不是简单地看一下哪句写对了哪句写错了就完事儿的 而要认真分析错误原因： 如果因为单词没记熟，刚才说过，把单词追加到遗忘单词表里，日后复习 如果因为语法没掌握，再回头学习一下语法，实在理解不了，找 ChatGPT 如果单纯听错了，把那句话找出来反复听，直到听明白了为止。这里没有反复次数上限。比如一些例如していただきます之类比较长的固定用法，一开始确实很难辨别清楚。只能慢慢把耳朵磨出来。 五、掌握学习内容的评估与补强 完成上述学习步骤后，可以明确以下几点：\n掌握的部分：通过听写、单词记忆和课文理解，哪些内容已经熟练掌握。\n存在缺陷的部分：哪些内容仍然有问题，例如单词记忆、语法掌握或听写准确性。\n对缺陷部分的处理 反复听写、记忆、理解，直到补上缺陷。 把课后练习题一丝不苟地做一遍： 简单练习的价值：单词替换练习看似简单，但能有效巩固所学内容。 错误分析：对照答案时不要仅仅判断对错，而要明确： 为什么出错？ 错在哪里？ 如何避免类似错误？ 记录总结：将所有错误记录下来，每周复习时反思改进。 注意事项 杜绝马虎：不要用“马虎了”敷衍任何错误。马虎恰恰是熟练度不足的表现。 错误管理：将错误归纳总结，形成一个复习清单，定期查漏补缺。 小结 关于听写，最初因为掌握的知识和词汇都比较少，可能课本是最好的听写材料。 当你达到一定水平后，就可以开始试着听写动画片、日剧的内容。 网上为了听写貌似也有不少高人听完之后的台词，你听完了可以拿来对照。 但不要全信网上的台词，因为他们听的也不一定就正确。 要自己仔细甄别，实在不行找个日本人帮忙听一下。 语言学习者的好朋友 中文/英语/日语互相学习（语言交换）募集公佈栏 另外，如果没有语言环境，即便是能顺利听写出来的内容，也会随着时间的推移渐渐遗忘。 你可以考虑利用通勤或者等待时间，带个mp3在身上，反复放听过的内容，让耳朵多接触日语，从而适应它。只要注意别过于投入坐车坐过站就行。 六、写作练习的重要性 1. 写作文的时间安排 起步阶段（前两周）：可能难以写出成型的内容，逐步适应。 两周后：至少每周写一篇作文。 2. 写作内容与方法 写作目标： 写下自己“想写的”内容，而不仅仅是“能写的”内容。 无需追求文采，哪怕是流水账，只要坚持下去就好。 遇到困难时的策略： 单词：查辞典，找到表达所需的词汇。 语法：大胆使用想用的语法，即便有可能出错。 3. 改正错误 写作中可能存在错误，这是学习的正常过程。 ChatGPT 会帮你改正这些错误 七、关于鼓励自己 记录成就： 为自己设置学习目标和奖励机制，例如制作勋章。 坚持不懈： 无论进展多慢，只要不停下来就都是好样的。 避免因突击复习追求“虚假成绩”，真实能力最重要。 没有不出力就有回报的方法。但是有充满乐趣，出力了但不痛苦的方法。 祝你学习成功！ 学习日语是一场长跑，坚持是关键。只要保持耐心和信心，定能有所收获！🌟 ","permalink":"https://yuuniji.us.kg/posts/japanese-learning-methods/","summary":"\u003ch1 id=\"日语学习入门高效方法\"\u003e日语学习入门：高效方法\u003c/h1\u003e\n\u003ch2 id=\"一找一本教材推荐大家的日本语みんなの日本語\"\u003e一、找一本教材（推荐《大家的日本语》（みんなの日本語）\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e推荐理由\u003c/strong\u003e：\n\u003cul\u003e\n\u003cli\u003e日本人编写的教材，错误是日本人常犯的错误，不会影响在日本人眼中的日语水平。\u003c/li\u003e\n\u003cli\u003e选择适合自己的教材，关键是能学进去，而不是内容多么完美。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e教材结构\u003c/strong\u003e：\n\u003cul\u003e\n\u003cli\u003e本册（全日语）\u003c/li\u003e\n\u003cli\u003e指导用书（含单词表、中文说明等）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"二准备复读机或复读软件\"\u003e二、准备复读机或复读软件\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e功能要求\u003c/strong\u003e：\n\u003cul\u003e\n\u003cli\u003e可设置复读位置。\u003c/li\u003e\n\u003cli\u003e具备对录音分解记忆功能更佳。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"三课前准备\"\u003e三、课前准备\u003c/h2\u003e\n\u003ch3 id=\"1-不看课文先看课后单词和语法说明\"\u003e1. 不看课文，先看课后单词和语法说明\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e如果使用《大家的日本语》，仅查看指导用书，不看本册内容。指导用书中的课文翻译部分也先跳过。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2-先背单词和语法\"\u003e2. 先背单词和语法\u003c/h3\u003e\n\u003ch4 id=\"听录音背单词\"\u003e听录音背单词\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e初次记忆\u003c/strong\u003e\u003c/p\u003e","title":"日语学习入门：高效方法"},{"content":"日语学习入门：核心概念 第一核心：一切以句子为中心！句子就是一切！句子就是财富！ 句子简单明确，容易掌握，并马上可以用于交流！\n激情的成就 如果每天脱口而出十句话，一年可以积累3600多句，举一反三能拥有近一万个实用句子，达到自由交流的境界！ 学习一年日语的学生能力将远超大多数大学日语本科毕业生，后者能连续说的日语可能不到十句话。 终身的爱好 收集好句子并反复操练，直到脱口而出。 这个习惯让很多人在我的影响下也开始热爱学习日语，从而走向成功之路！ 立刻行动（让我们花10分钟学会最常用的十句日语） どちらにお住まいですか。 （您住在哪里？） どうやってこちらへみえましたか。 （您怎么来的？） お体はいかがですか。 （您身体怎么样？） 家族はお見えですか。 （您一个人住吗？） お仕事はどちらですか。 （您在哪里工作？） 今度の日曜日はお暇ですか。 （这个星期天您有时间吗？） どちらにお勤めですか。 （您在哪里工作？） わからないことはありますか。 （您有什么不清楚的地方吗？） お困りのことはありませんか。 （您有什么为难的吗？） 仕事が終わったら、お会いできますか。 （工作结束之后，能和您见面吗？） 第二核心：三最口腔肌肉训练法 核心理念 语言是“说”出来的！\n游泳是“游”出来的，钢琴是“弹”出来的，语言也必须“说”出来！ 学习外语要训练口腔肌肉，使之能轻松发出“陌生的外国声音”。 训练方法 用“最大声、最清晰、最快速”的方式反复练习句子或短文，直至脱口而出。 每次记录时间，争取突破上次成绩，可互相比赛。 忘掉面子，享受说破烂日语的快乐。越多练习，你的日语越好！ 经典三最短文 第一篇：\n人間には、わからないことや知らないことがあって当然である。 ただ私のわからないことや知らないことは、世間では常識的なことが多いように感じる。 だから、それがみんなが知っていることだということがわかれば、つい、わかったふりをしてしまう。 どうして「わからない」「知らない」と言えないのか。 自尊心が強いからだというより、物事に対してあまりにも鈍感である自分をさらけ出したくないのである。 素直になりたいものである。 第二篇：\nモンテーニユは、こういうことをいっている。 世間にはよく、心では思っているのだけれと、どういっていいかわからない、という人がある。 その人は、たいへんいいことを考えている人のように見えるが、言葉にならないということは、心のなかにはなんにもない、ということである。 もし考えがあるならば、言葉続々として従う、という。 第三篇：\nたしかに、言葉にあらわしてみてはじめて自分の考えのつまらなさがわかることがある。 何かすばらしい考えでもあるように思っているだけである。 後世の哲学者はみんなこの意味のことをいっている。 考えるというのは、言葉や文字で考えるのである。 言葉になったものが考えなのである。 第三核心：通过口语突破语法 方法 一句话突破一条语法！ 脱口而出实用句子，掌握可爱语法。 日语2级、1级的语法总共约260条。每天练3句话，3个月掌握260句，基本覆盖高级语法。 更重要的是，你终于会说话了，而且是两百多个绝对“复杂”的句子！ 我爱语法，没有语法，就没有美妙的语言！ 例句 長い苦労のあげく、とうとう病気になってしまいました。 （长期劳累后，终于生病了。） 喜びのあまり、声をあげた。 （因过于高兴而欢呼。） せっかく作ってくださったのだから、いただこうじゃないですか。 （特意为我们做的，我们就吃了吧。） 彼の気持ちは本当に理解しがたい。 （他的心思真的很难理解。） これこそ本当の日本料理です。 （这才是真正的日本菜。） 第四核心：通过口语突破单词 孤立背单词是徒劳的！单词必须在句子中学习。 单词量不如句子量重要，句子量达到300以上即可流利交流。 实用例句 工事は来春から始められます。もっとも予算が獲得できればの話ですが。 （明年春天能开工，前提是获得预算。） 腹のうちは読めない。 （看不透内心。） 父に死なれた友人を労わる。 （安慰失去父亲的朋友。） いっそ思い切って彼女に打ち明けようか。 （索性告诉她吧。） 電話とは、時々ひどくいまいましいものである。 （电话有时真让人讨厌。） あそこの社長は説教が長くてうんざりしますよ。 （那家公司的老板说教起来没完没了，另人发烦。） けが人の介抱に忙しい。（忙于照顾受伤的人。） こう暑くてはかなわない。（这么热可吃不消。） こんなお金をもらう筋がない。（没理由要这种钱。） この町の魅力は夜の夜景に尽きる。 （这座城市的魅力就在于她的夜景。） 第五核心：口语突破听力 听力与口语的关系 世上本没有听力题，因为听不懂的人太多，所以才有听力题。激情日语的秘诀：你一定能听懂你能说出的东西！ 核心理念：你只管去大量地练习说，只要“发音纯正”、 “用法地道”，你的听力自然突破！ 采用“超级三最法（最大声、最清晰、最快速）”，练到比日本人说得还快，你还怕听不懂吗？ 为什么口语突破听力？ 同步成长\n能说出来的就能听懂，能听懂的通过练习就能说出来。 语言学习应像母语习得一样，自然“听说并进”。 实践证明\n从小我们没有专门的听力训练，但中文听力世界一流。 结论：听力和口语是同步成长的！ 解决听力问题的最终办法：口语过关！ 练习口语，确保“发音纯正、用法地道”。 口语过关，听力自然过关。 日语经典听力练习题 经典三级听力 问题：男の人と女の人が話しています。ギター教室の生徒は、今年、何人になりましたか。\n对话：\n男性：今年は、生徒はたくさん来ていますか？ピアノ教室もギター教室も、去年は30人でしたね。 女性：はい。ピアノ教室は急に多くなって、去年の2倍になりました。でも、ギター教室は去年より10人、少なくなってしまいました。 男性：10人もですか。それは困りましたね。 答案：20人（去年30人 - 10人 = 20人）\n经典二级听力 问题：男の人はなぜ体の調子が悪くなったといっていますか。\n仕事をやりすぎたからです。 引越しで疲れたからです。 家の壁紙から毒が出てくるからです。 その建築業者が特にひどい材料を使ったからです。 对话：\n女：山田さん、ずいぶん元気がありませんねえ。 男：ええ。頭痛がして、体がだるいんです。 女：仕事のやりすぎですか。 男：いや。どうも、家の中の空気が悪いみたいなんです。 女：だって、町の中心の空気の悪いところから、空気のいいところに引っ越したんでしょう？ 男：実は、家の壁紙から体に害のある化学物質、つまり毒が出ていることがわかったんです。 女：えっ？それで体の具合がわるくなったんですか。 男：ええ。 答案：3. 家の壁紙から毒が出てくるからです。\n经典一级听力 问题：男の人の言いたいことはどんなことですか。\n今忙しいから、自分で調べてやってほしい。 やり方は簡単だから、自分でやってほしい。 ほかの人に聞いてほしい。 グラフはいらないから、やめてほしい。 对话：\n女：あのう、すみません。これ、やり方、教えてください。 男：ええ、何？ ああ、これね。表を作るわけ？ 女：ええ。だけど、中にグラフも入れたいんです。できますか。 男：うーん。できることはできるけど。 女：ほんと？ どうやるんですか。 男：えーとねえ、あの棚の上に黄色いの、あるよね。 女：はい。 男：あれ見てねえ。 女：教えてくれないんですか。 男：今それどころじゃないんだよ。 女：はーい。 答案：1. 今忙しいから、自分で調べてやってほしい。\n第六核心：口语突破考试 核心理念 考试就是口语，口语就是考试！ 两者完全统一，考试题目反复考的内容本质上就是语言交流中的常见表达。 考试的特点是“换汤不换药”，熟悉常见考点、题型后，所有考试都能轻松应对。 实现目标的方法 将考试题总结成口语\n把每一道题的正确答案转化为地道的口语表达。 使用“三最法”反复练习，直到能够脱口而出。 培养一流语感\n理解考试陷阱的规律，熟悉语言的逻辑和语境。 素质教育（语言交流能力）与应试教育（考试技巧）完美结合。 一举多得\n提高日语考试能力的同时，获得真正的日语交流能力。 这对个人职业发展乃至国家经济建设都具有重要意义。 明正激情日语考试秘诀 脱口而出考试题：不只是选对答案，而是能够自信地将每一道题的句子用地道的方式表达出来。 变第一人称：将考题中的句子转化成自己的话，用第一人称表达，不断练习，直至完全掌握。 牢记：真正的成功感来源于用语言交流，而非仅仅通过考试！ 经典考试题练习 经典3级题 题目：\n兄と弟は周りの人にいつも______しまう。\n①くらべて ②くらべられて ③くらべらせて ④くらべられさせて\n答案：②くらべられて\n脱口而出练习：\n私は周りの人にくらべられてしまうことが多いです。（我经常被周围的人拿来比较。） 经典2级题 题目：\nその男は年をとっている______、体も弱っており、仕事をするのは無理だった。\n①一方に ②うえは ③あまりは ④うえに\n答案：④うえに\n脱口而出练习：\n年をとったうえに、体も弱ってしまいました。（年纪大了，身体也变得虚弱。） 经典1级题 题目：\n外国からのお客を______、銀座でウィンドウショッピングをした。\n①案内するがてら ②案内なので ③案内だから ④案内かたがた\n答案：①案内するがてら\n脱口而出练习：\n銀座で外国からのお客を案内するがてら、ウィンドウショッピングをしました。（带外国客人去银座时顺便逛了橱窗。） 明正的强烈呼吁 为了更高效备考日语等级考试、口译证书考试及其他考试，不要仅仅满足于选对答案！ 真正的目标是： 将考题中的句子转化为实用的地道口语。 反复练习，用第一人称表达，直到能够脱口而出。 让我们一起来“脱口而出考试题”吧！为真正的语言交流能力和成功而努力！\n第七核心：学一句算一句，说一句顶十句！ 核心理念 句子虽多，但学一句算一句！\n语言学习中，句子数量“千千万万”，不必因此感到灰心和恐惧。 学到的每一句都要一丝不苟地掌握并脱口而出。 不懂只是一次不懂，糊涂只是一次糊涂，反复练习直到彻底掌握。 说一句顶十句！\n每句练习都要做到“字正腔圆”，不仅要地道，还要自信满满，甚至比日本人更标准。 追求质量而非数量：说一句地道的话比说十句模糊的句子更有用！ 方法与要求 每学习一句，做到：\n字音标准。 表达流利。 胸有成竹，底气十足。 避免“学了忘，忘了学”的循环，要逐步积累，不断强化。\n在实际交流中做到高人一等，不让对方轻易察觉你是初学者。\n经典句子与练习 お会いできて、うれしいです。 中文释义：能见到您，很高兴。\n脱口而出练习： 场景：初次见面时的礼貌问候。 例句练习： お会いできて、ほんとうにうれしいです。（能见到您，真的很高兴。） 皆さんといい友達になれることを楽しみにしています。 中文释义：希望和大家成为好朋友。\n脱口而出练习： 场景：加入团队或社交场合时表达期待。 例句练习： このクラスの皆さんと仲良くなれることを楽しみにしています。（希望能和这个班级的大家相处融洽。） 日本の会社で働くためには、日本語が上手に話せることが必要だと思います。 中文释义：为了在日本公司工作，我认为说好日语是必要的。\n脱口而出练习： 场景：面试或谈论语言能力的重要性。 例句练习： 日本の会社で成功するには、日本語能力が欠かせないと思います。（在日本公司取得成功，我认为日语能力是不可或缺的。） 外国語をマスターするコツは、積極的に話すことじゃないかと思います。 中文释义：我认为掌握外语的关键在于积极地说。\n脱口而出练习： 场景：讨论语言学习方法。 例句练习： 外国語を上達させるには、間違いを恐れずに話すことが大切だと思います。（提高外语能力需要不怕犯错地积极说。） お考えを聞かせていただければありがたいと思います。 中文释义：希望您能谈谈您的想法。\n脱口而出练习： 场景：与上级或同事讨论问题时的礼貌表达。 例句练习： こちらの件について、ぜひお考えをお聞かせください。（关于这件事，希望能听听您的意见。） 第八核心：一年时间攻克日语！ 核心理念 随身携带语言环境：通过制作小纸条，将日语单词和句子随时随地带在身边，实现反复刺激大脑、增强记忆。 充分利用零碎时间：每天轻松掌握十句日语，积累日久天长，一年即可彻底攻克语言难关。 控制懒惰，重在行动：停止抱怨，从当下开始“缺什么补什么”，专注解决问题。 实用商务日语句型 取り扱い品目について紹介していただけないでしょうか。 中文释义：能介绍一下贵方的经营项目吗？\n场景：与客户初次接触时，了解对方业务范围。\n例句拓展： 新商品の取り扱い品目について教えていただけますか？（可以介绍一下新产品的品类吗？） できるだけご希望に添えようにいたしましょう。 中文释义：我们会尽量满足您的要求。\n场景：与客户谈判或讨论需求时表达合作意向。\n例句拓展： お客様のご希望に最大限お応えできるように努力いたします。（我们会尽最大努力满足您的需求。） 古いお得意先という関係を考慮に入れなければ、このようなオファーはいたしませんね。 中文释义：考虑到您是老客户才报这个价的。\n场景：与客户就价格或优惠条件进行沟通时的解释。\n例句拓展： 長年のお取引を考慮して、特別な価格でご提供いたします。（考虑到多年合作，特意给您提供优惠价格。） 残念ながら、当方は貴社の損害賠償の要求を受け入れかねます。 中文释义：抱歉，我方难以接受贵社的索赔要求。\n场景：就争议或合同条款进行沟通时的正式声明。\n例句拓展： 誠に申し訳ございませんが、こちらの条件には応じかねます。（非常抱歉，我们难以接受这一条件。） われわれは外資を導入するに当たって、契約を重んじて、信用を守るという原則を一貫モットーしています。 中文释义：我们在引进外资时，一贯恪守重合同、守信用的原则。\n场景：正式场合介绍公司合作原则时的表述。\n例句拓展： 信頼を基盤とした長期的な協力関係を築くことを目指しています。（我们致力于构建以信任为基础的长期合作关系。） 励志名言 用日语激励自己： 日本語を勉強して、祖国のために働こう。\n学好日语，为祖国服务。 昨日の失敗は今日の成功となる。\n今天的成就源自昨天的不可能。 渇望と決心は、失望に打ち勝つ。\n渴求和决心必能战胜失望。 意義ある目標に向かって進み始めるのなら、それはもう成功だと言える。\n当你开始朝一个有意义的目标前进时，你就成功了。 渇望と決心は、失望に打ち勝つ。 渴求和决心必能战胜失望。 金銭の有無が問題なのではない、考えの有無が問題なのだ。 缺乏金钱不是问题，缺乏想法才是问题。 自分を信じること。それが成功の秘訣である。 你必须相信你自己，这就是成功的秘密。 意義ある目標に向かって進み始めるのなら、それはもう成功だと言える。 当你开始朝一个有意义的目标前进时，你就成功了。 成功の影には、数多くの失敗の道のりがある。 每个成功者的背后，都有许多不成功的岁月。 理想の自分を持ち、努力した結果が、今の身分や地位を築いたのである。 我们的身份和地位都是自己事先设想出来的。 三大忠告 忠告一：停止抱怨，立即行动！ 基础不好？没关系！\n基础好却用不上，远不如从现在开始行动。 忠告二：别低估自己的潜力！ 记忆力差？没有语言天赋？都不是问题！\n只要会说中文，你就有能力说流利日语。 忠告三：技能是最好的保障！ 担心学好日语找不到好工作？\n真才实学者从不担心就业问题，技能是最大的竞争力。 ","permalink":"https://yuuniji.us.kg/posts/japanese-learning-concept/","summary":"\u003ch1 id=\"日语学习入门核心概念\"\u003e日语学习入门：核心概念\u003c/h1\u003e\n\u003ch2 id=\"第一核心一切以句子为中心句子就是一切句子就是财富\"\u003e第一核心：一切以句子为中心！句子就是一切！句子就是财富！\u003c/h2\u003e\n\u003cp\u003e句子简单明确，容易掌握，并马上可以用于交流！\u003c/p\u003e\n\u003ch3 id=\"激情的成就\"\u003e激情的成就\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e如果每天脱口而出十句话，一年可以积累3600多句，举一反三能拥有近一万个实用句子，达到自由交流的境界！\u003c/li\u003e\n\u003cli\u003e学习一年日语的学生能力将远超大多数大学日语本科毕业生，后者能连续说的日语可能不到十句话。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"终身的爱好\"\u003e终身的爱好\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e收集好句子并反复操练，直到脱口而出。\u003c/li\u003e\n\u003cli\u003e这个习惯让很多人在我的影响下也开始热爱学习日语，从而走向成功之路！\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"立刻行动让我们花10分钟学会最常用的十句日语\"\u003e立刻行动（让我们花10分钟学会最常用的十句日语）\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eどちらにお住まいですか。\u003c/strong\u003e （您住在哪里？）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eどうやってこちらへみえましたか。\u003c/strong\u003e （您怎么来的？）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eお体はいかがですか。\u003c/strong\u003e （您身体怎么样？）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e家族はお見えですか。\u003c/strong\u003e （您一个人住吗？）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eお仕事はどちらですか。\u003c/strong\u003e （您在哪里工作？）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e今度の日曜日はお暇ですか。\u003c/strong\u003e （这个星期天您有时间吗？）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eどちらにお勤めですか。\u003c/strong\u003e （您在哪里工作？）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eわからないことはありますか。\u003c/strong\u003e （您有什么不清楚的地方吗？）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eお困りのことはありませんか。\u003c/strong\u003e （您有什么为难的吗？）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e仕事が終わったら、お会いできますか。\u003c/strong\u003e （工作结束之后，能和您见面吗？）\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"第二核心三最口腔肌肉训练法\"\u003e第二核心：三最口腔肌肉训练法\u003c/h2\u003e\n\u003ch3 id=\"核心理念\"\u003e核心理念\u003c/h3\u003e\n\u003cp\u003e语言是“说”出来的！\u003c/p\u003e","title":"日语学习入门：核心概念"},{"content":"Hugo 博客 + GitHub Pages 完整部署方案 📌 环境准备 设备：MacBook（macOS） 工具： Git Hugo GitHub 账号 安装 Hugo brew install hugo 确认安装成功：\nhugo version 🎯 创建 Hugo 博客 mkdir blog \u0026amp;\u0026amp; cd blog hugo new site . 初始化 Git：\ngit init 🎨 选择 \u0026amp; 添加主题 推荐 PaperMod 主题：\ngit submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 编辑 config.toml，添加：\ntheme = \u0026#34;PaperMod\u0026#34; baseURL = \u0026#34;https://yuuniji.us.kg\u0026#34; 📝 编写博客文章 创建第一篇文章：\nhugo new posts/hello-world.md 编辑 content/posts/hello-world.md：\n--- title: \u0026#34;Hello World\u0026#34; date: 2025-02-22T12:00:00 draft: false --- 这是我的第一篇博客！ 🔧 本地预览（第一次部署请跳过） hugo server -D 在浏览器访问：\nhttp://localhost:1313 🔥 发布到 GitHub 1. 创建 GitHub 仓库 blog（存放 Hugo 源码） yuuniji.github.io（存放生成的静态文件） 2. 推送 blog 仓库 git remote add origin https://github.com/yuuniji/blog.git git branch -M main git add . git commit -m \u0026#34;Initial commit\u0026#34; git push -u origin main 3. 生成静态文件 hugo -D 静态文件位于 public/ 目录。\n4. 推送到 yuuniji.github.io cd public git init git remote add origin https://github.com/yuuniji/yuuniji.github.io.git git checkout -b main git add . git commit -m \u0026#34;Deploy Hugo site\u0026#34; git push -f origin main 🌎 配置 GitHub Pages 进入 yuuniji.github.io 仓库 Settings → Pages。 选择 main 分支，保存后等待部署完成。 访问 https://yuuniji.us.kg 查看博客。 🔄 自动化部署（可选） 1. 在 blog 仓库添加 deploy.sh nano deploy.sh 粘贴以下内容：\n#!/bin/bash hugo -D cd public git add . git commit -m \u0026#34;Deploy: $(date)\u0026#34; git push origin main cd .. 保存并退出（按 Ctrl + X，然后 Y，再回车）。\n2. 赋予执行权限 chmod +x deploy.sh 3. 运行部署脚本 ./deploy.sh 🎉 大功告成！ 以后更新博客时，只需：\n在 blog/ 目录下写文章 hugo new posts/xxx.md 运行 ./deploy.sh 访问 https://yuuniji.us.kg 查看更新 💡 有问题随时复习此笔记！ 🚀\nHugo 博客多语言 \u0026amp; 功能扩展指南 快速链接 baseURL = \u0026#34;https://yuuniji.us.kg\u0026#34; title = \u0026#34;Yuuniji的博客\u0026#34; theme = \u0026#34;PaperMod\u0026#34; defaultContentLanguage = \u0026#34;zh\u0026#34; hasCJKLanguage = true [languages] [languages.zh] languageName = \u0026#34;中文\u0026#34; weight = 1 contentDir = \u0026#34;content/zh\u0026#34; [languages.zh.params] archivesTitle = \u0026#34;归档\u0026#34; archivesDescription = \u0026#34;按年份和月份查看文章归档\u0026#34; [languages.zh.menu] [[languages.zh.menu.main]] name = \u0026#34;首页\u0026#34; url = \u0026#34;/\u0026#34; weight = 1 [[languages.zh.menu.main]] name = \u0026#34;关于\u0026#34; url = \u0026#34;/about/\u0026#34; weight = 2 [[languages.zh.menu.main]] name = \u0026#34;标签\u0026#34; url = \u0026#34;/tags/\u0026#34; weight = 3 [[languages.zh.menu.main]] name = \u0026#34;归档\u0026#34; url = \u0026#34;/archives/\u0026#34; weight = 4 [[languages.zh.menu.main]] name = \u0026#34;搜索\u0026#34; url = \u0026#34;/search/\u0026#34; weight = 5 [languages.en] languageName = \u0026#34;English\u0026#34; weight = 2 contentDir = \u0026#34;content/en\u0026#34; [languages.en.params] archivesTitle = \u0026#34;Archives\u0026#34; archivesDescription = \u0026#34;Browse articles by year and month\u0026#34; [languages.en.menu] [[languages.en.menu.main]] name = \u0026#34;Home\u0026#34; url = \u0026#34;/\u0026#34; weight = 1 [[languages.en.menu.main]] name = \u0026#34;About\u0026#34; url = \u0026#34;/about/\u0026#34; weight = 2 [[languages.en.menu.main]] name = \u0026#34;Tags\u0026#34; url = \u0026#34;/tags/\u0026#34; weight = 3 [[languages.en.menu.main]] name = \u0026#34;Archives\u0026#34; url = \u0026#34;/archives/\u0026#34; weight = 4 [[languages.en.menu.main]] name = \u0026#34;Search\u0026#34; url = \u0026#34;/search/\u0026#34; weight = 5 [languages.ja] languageName = \u0026#34;日本語\u0026#34; weight = 3 contentDir = \u0026#34;content/ja\u0026#34; [languages.ja.params] archivesTitle = \u0026#34;アーカイブ\u0026#34; archivesDescription = \u0026#34;年と月ごとに記事を表示\u0026#34; [languages.ja.menu] [[languages.ja.menu.main]] name = \u0026#34;ホーム\u0026#34; url = \u0026#34;/\u0026#34; weight = 1 [[languages.ja.menu.main]] name = \u0026#34;について\u0026#34; url = \u0026#34;/about/\u0026#34; weight = 2 [[languages.ja.menu.main]] name = \u0026#34;タグ\u0026#34; url = \u0026#34;/tags/\u0026#34; weight = 3 [[languages.ja.menu.main]] name = \u0026#34;アーカイブ\u0026#34; url = \u0026#34;/archives/\u0026#34; weight = 4 [[languages.ja.menu.main]] name = \u0026#34;検索\u0026#34; url = \u0026#34;/search/\u0026#34; weight = 5 [outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;, \u0026#34;SITEMAP\u0026#34;] section = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;] archives = [\u0026#34;HTML\u0026#34;] search = [\u0026#34;HTML\u0026#34;] [params] author = \u0026#34;Yuuniji\u0026#34; defaultTheme = \u0026#34;auto\u0026#34; ShowAllPagesInArchive = true ShowShareButtons = true ShowReadingTime = true ShowToc = true TocOpen = false ShowBreadCrumbs = true ShowCodeCopyButtons = true ShowPostNavLinks = true ShowRssButtonInSectionTermList = true archives = true [params.fuseOpts] isCaseSensitive = false shouldSort = true location = 0 distance = 1_000 threshold = 0.4 minMatchCharLength = 0 keys = [ \u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34; ] [content] archivesDir = \u0026#34;content/archives\u0026#34; 1. 目录结构 按照我的 hugo.toml 配置，我的 content 目录结构应该是：\ncontent/ ├── zh/ │ ├── _index.md │ ├── about.md │ ├── archives.md │ ├── search.md │ ├── categories/_index.md │ ├── posts/_index.md │ ├── tags/_index.md ├── en/ │ ├── _index.md │ ├── about.md │ ├── archives.md │ ├── search.md │ ├── categories/_index.md │ ├── posts/_index.md │ ├── tags/_index.md ├── ja/ ├── _index.md ├── about.md ├── archives.md ├── search.md ├── categories/_index.md ├── posts/_index.md ├── tags/_index.md 同时，你需要创建 archetypes 目录来适配不同语言：\narchetypes/ ├── default.md ├── zh.md ├── en.md ├── ja.md 2. archetypes 目录配置 每个语言的 archetypes 文件用于设置默认的 front matter。\n默认 archetypes/default.md --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} draft: true tags: [] categories: [] --- archetypes/zh.md（中文） --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} draft: true tags: [] categories: [] lang: \u0026#34;zh\u0026#34; --- archetypes/en.md（英文） --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} draft: true tags: [] categories: [] lang: \u0026#34;en\u0026#34; --- archetypes/ja.md（日语） --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date: {{ .Date }} draft: true tags: [] categories: [] lang: \u0026#34;ja\u0026#34; --- 3. 创建不同语言的文章 使用 --kind 选项指定 archetypes，并将文章创建到对应的 content/ 目录。\n中文文章 hugo new content/zh/posts/my-first-post1.md 这会在 content/zh/posts/ 目录下创建 my-first-post.md，并使用 archetypes/zh.md 作为模板。\n英文文章 hugo new content/en/posts/my-first-post1.md 这会在 content/en/posts/ 目录下创建 my-first-post.md，并使用 archetypes/en.md 作为模板。\n日语文章 hugo new content/ja/posts/my-first-post1.md 这会在 content/ja/posts/ 目录下创建 my-first-post.md，并使用 archetypes/ja.md 作为模板。\n自动化创建不同语言的文章 create_multilingual_post.sh 脚本\n#!/bin/bash # 检查传入参数是否存在 if [ -z \u0026#34;$1\u0026#34; ]; then echo \u0026#34;请输入文章标题。\u0026#34; exit 1 fi TITLE=\u0026#34;$1\u0026#34; DATE=$(date +%Y-%m-%d) # 创建文章文件名（使用短横线分隔） POST_NAME=$(echo \u0026#34;$TITLE\u0026#34; | tr \u0026#34; \u0026#34; \u0026#34;-\u0026#34;) # 生成中文文章 mkdir -p \u0026#34;content/zh/posts\u0026#34; cat \u0026gt; \u0026#34;content/zh/posts/$POST_NAME.md\u0026#34; \u0026lt;\u0026lt;EOL --- title: \u0026#34;$TITLE\u0026#34; date: $DATE lang: \u0026#34;zh\u0026#34; draft: true tags: [] categories: [] --- 这里是中文版本的内容。 EOL # 生成英文文章 mkdir -p \u0026#34;content/en/posts\u0026#34; cat \u0026gt; \u0026#34;content/en/posts/$POST_NAME.md\u0026#34; \u0026lt;\u0026lt;EOL --- title: \u0026#34;$TITLE\u0026#34; date: $DATE lang: \u0026#34;en\u0026#34; draft: true tags: [] categories: [] --- This is the English version of the post. EOL # 生成日语文章 mkdir -p \u0026#34;content/ja/posts\u0026#34; cat \u0026gt; \u0026#34;content/ja/posts/$POST_NAME.md\u0026#34; \u0026lt;\u0026lt;EOL --- title: \u0026#34;$TITLE\u0026#34; date: $DATE lang: \u0026#34;ja\u0026#34; draft: true tags: [] categories: [] --- この記事は日本語バージョンです。 EOL echo \u0026#34;已成功创建三种语言版本的文章：$TITLE\u0026#34; 在终端中，先切换到脚本所在的目录，并授予执行权限：\nchmod +x create_multilingual_post.sh 执行以下命令，并提供文章标题：\n./create_multilingual_post.sh \u0026#34;你的文章标题\u0026#34; 总结 创建不同语言的文章 需要 hugo new --kind \u0026lt;language\u0026gt; \u0026lt;path\u0026gt;。 archetypes 目录 应该有 zh.md、en.md、ja.md 以匹配 content/ 目录。 保持 contentDir 结构一致，避免 Hugo 生成文章时找不到正确的模板。 这样，你就可以正确管理 Hugo 多语言博客的文章创建了！🚀\n","permalink":"https://yuuniji.us.kg/posts/my-first-post/","summary":"\u003ch1 id=\"hugo-博客--github-pages-完整部署方案\"\u003eHugo 博客 + GitHub Pages 完整部署方案\u003c/h1\u003e\n\u003ch2 id=\"-环境准备\"\u003e📌 环境准备\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e设备\u003c/strong\u003e：MacBook（macOS）\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e工具\u003c/strong\u003e：\n\u003cul\u003e\n\u003cli\u003eGit\u003c/li\u003e\n\u003cli\u003eHugo\u003c/li\u003e\n\u003cli\u003eGitHub 账号\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"安装-hugo\"\u003e\u003cstrong\u003e安装 Hugo\u003c/strong\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install hugo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e确认安装成功：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"-创建-hugo-博客\"\u003e🎯 创建 Hugo 博客\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkdir blog \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e cd blog\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo new site .\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e初始化 Git：\u003c/p\u003e","title":"我的博客搭建之旅：从零到上线"},{"content":"你好, 我是叶泽伟 👋 Python \u0026amp; Web 开发者 | 探索云计算 | 技术爱好者\n🚀 热爱编程和开源 📖 通过博客分享知识 🎯 持续学习与成长 📫 联系方式:\nGitHub: github.com/yuuniji Email: yzw.beast@gmail.com 保持好奇，持续构建！🚀\n","permalink":"https://yuuniji.us.kg/about/","summary":"\u003ch2 id=\"你好-我是叶泽伟-\"\u003e你好, 我是叶泽伟 👋\u003c/h2\u003e\n\u003cp\u003ePython \u0026amp; Web 开发者 | 探索云计算 | 技术爱好者\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e🚀 热爱编程和开源\u003c/li\u003e\n\u003cli\u003e📖 通过博客分享知识\u003c/li\u003e\n\u003cli\u003e🎯 持续学习与成长\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e📫 联系方式:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGitHub: \u003ca href=\"https://github.com/yuuniji\"\u003egithub.com/yuuniji\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eEmail: \u003ca href=\"mailto:yzw.beast@gmail.com\"\u003eyzw.beast@gmail.com\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e保持好奇，持续构建！🚀\u003c/p\u003e","title":"关于我"}]